[2017-11-09 12:46:02.169] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:46:02.169] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:46:02.194] [INFO] logs - Navigating to URL
[2017-11-09 12:46:02.194] [INFO] logs - Navigating to URL
[2017-11-09 12:46:07.738] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:46:07.738] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:46:07.741] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:46:07.741] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:46:07.742] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:46:07.745] [INFO] logs - Entering text Newuser1
[2017-11-09 12:46:07.746] [INFO] logs - Clicking on button
[2017-11-09 12:46:07.747] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:46:07.748] [INFO] logs - Entering text New Column
[2017-11-09 12:46:07.749] [INFO] logs - Entering text New Column
[2017-11-09 12:46:07.750] [INFO] logs - Clicking on button
[2017-11-09 12:46:07.751] [INFO] logs - Waiting for element
[2017-11-09 12:46:07.753] [INFO] logs - Test Exception message: element(...).getText(...).toEqual is not a function
[2017-11-09 12:46:07.742] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:46:07.745] [INFO] logs - Entering text Newuser1
[2017-11-09 12:46:07.746] [INFO] logs - Clicking on button
[2017-11-09 12:46:07.747] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:46:07.748] [INFO] logs - Entering text New Column
[2017-11-09 12:46:07.749] [INFO] logs - Entering text New Column
[2017-11-09 12:46:07.750] [INFO] logs - Clicking on button
[2017-11-09 12:46:07.751] [INFO] logs - Waiting for element
[2017-11-09 12:46:07.753] [INFO] logs - Test Exception message: element(...).getText(...).toEqual is not a function
[2017-11-09 12:51:32.831] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:51:32.831] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:51:32.854] [INFO] logs - Navigating to URL
[2017-11-09 12:51:32.854] [INFO] logs - Navigating to URL
[2017-11-09 12:51:39.352] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:51:39.352] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:51:39.357] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:51:39.358] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:51:39.363] [INFO] logs - Entering text Newuser1
[2017-11-09 12:51:39.365] [INFO] logs - Clicking on button
[2017-11-09 12:51:39.368] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:51:39.370] [INFO] logs - Entering text New Column
[2017-11-09 12:51:39.371] [INFO] logs - Entering text New Column
[2017-11-09 12:51:39.376] [INFO] logs - Clicking on button
[2017-11-09 12:51:39.377] [INFO] logs - Waiting for element
[2017-11-09 12:51:39.380] [INFO] logs - Test Exception message: element(...).getText(...).toEqual is not a function
[2017-11-09 12:51:39.357] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:51:39.358] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:51:39.363] [INFO] logs - Entering text Newuser1
[2017-11-09 12:51:39.365] [INFO] logs - Clicking on button
[2017-11-09 12:51:39.368] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:51:39.370] [INFO] logs - Entering text New Column
[2017-11-09 12:51:39.371] [INFO] logs - Entering text New Column
[2017-11-09 12:51:39.376] [INFO] logs - Clicking on button
[2017-11-09 12:51:39.377] [INFO] logs - Waiting for element
[2017-11-09 12:51:39.380] [INFO] logs - Test Exception message: element(...).getText(...).toEqual is not a function
[2017-11-09 12:56:23.510] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:56:23.510] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:56:23.534] [INFO] logs - Navigating to URL
[2017-11-09 12:56:23.534] [INFO] logs - Navigating to URL
[2017-11-09 12:56:29.990] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:56:29.990] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:56:29.995] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:56:29.996] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:56:29.999] [INFO] logs - Entering text Newuser1
[2017-11-09 12:56:30.001] [INFO] logs - Clicking on button
[2017-11-09 12:56:30.002] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:56:30.004] [INFO] logs - Entering text New Column
[2017-11-09 12:56:30.005] [INFO] logs - Entering text New Column
[2017-11-09 12:56:29.995] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:56:30.006] [INFO] logs - Clicking on button
[2017-11-09 12:56:30.008] [INFO] logs - Waiting for element
[2017-11-09 12:56:30.011] [INFO] logs - Test Exception message: element(...).getText(...).toEqual is not a function
[2017-11-09 12:56:29.996] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:56:29.999] [INFO] logs - Entering text Newuser1
[2017-11-09 12:56:30.001] [INFO] logs - Clicking on button
[2017-11-09 12:56:30.002] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:56:30.004] [INFO] logs - Entering text New Column
[2017-11-09 12:56:30.005] [INFO] logs - Entering text New Column
[2017-11-09 12:56:30.006] [INFO] logs - Clicking on button
[2017-11-09 12:56:30.008] [INFO] logs - Waiting for element
[2017-11-09 12:56:30.011] [INFO] logs - Test Exception message: element(...).getText(...).toEqual is not a function
[2017-11-09 12:59:50.042] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:59:50.042] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 12:59:50.068] [INFO] logs - Navigating to URL
[2017-11-09 12:59:50.068] [INFO] logs - Navigating to URL
[2017-11-09 12:59:55.727] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:59:55.727] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 12:59:55.730] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:59:55.732] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:59:55.735] [INFO] logs - Entering text Newuser1
[2017-11-09 12:59:55.736] [INFO] logs - Clicking on button
[2017-11-09 12:59:55.738] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:59:55.740] [INFO] logs - Entering text New Column
[2017-11-09 12:59:55.741] [INFO] logs - Entering text New Column
[2017-11-09 12:59:55.742] [INFO] logs - Clicking on button
[2017-11-09 12:59:55.743] [INFO] logs - Waiting for element
[2017-11-09 12:59:55.745] [INFO] logs - Passed
[2017-11-09 12:59:55.747] [INFO] logs - Passed
[2017-11-09 12:59:55.748] [INFO] logs - Passed
[2017-11-09 12:59:55.749] [INFO] logs - Passed
[2017-11-09 12:59:55.730] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 12:59:55.750] [INFO] logs - Passed
[2017-11-09 12:59:55.732] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 12:59:55.735] [INFO] logs - Entering text Newuser1
[2017-11-09 12:59:55.736] [INFO] logs - Clicking on button
[2017-11-09 12:59:55.738] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 12:59:55.740] [INFO] logs - Entering text New Column
[2017-11-09 12:59:55.741] [INFO] logs - Entering text New Column
[2017-11-09 12:59:55.742] [INFO] logs - Clicking on button
[2017-11-09 12:59:55.743] [INFO] logs - Waiting for element
[2017-11-09 12:59:55.745] [INFO] logs - Passed
[2017-11-09 12:59:55.747] [INFO] logs - Passed
[2017-11-09 12:59:55.748] [INFO] logs - Passed
[2017-11-09 12:59:55.749] [INFO] logs - Passed
[2017-11-09 12:59:55.750] [INFO] logs - Passed
[2017-11-09 15:11:42.591] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:11:42.591] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:11:42.614] [INFO] logs - Navigating to URL
[2017-11-09 15:11:42.614] [INFO] logs - Navigating to URL
[2017-11-09 15:11:47.964] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:11:47.964] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:11:47.969] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:11:47.970] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:11:47.973] [INFO] logs - Entering text Newuser1
[2017-11-09 15:11:47.975] [INFO] logs - Clicking on button
[2017-11-09 15:11:47.977] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:11:47.979] [INFO] logs - Entering text New Column
[2017-11-09 15:11:47.979] [INFO] logs - Entering text New Column
[2017-11-09 15:11:47.981] [INFO] logs - Clicking on button
[2017-11-09 15:11:47.982] [INFO] logs - Waiting for element
[2017-11-09 15:11:47.969] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:11:47.983] [INFO] logs - Passed
[2017-11-09 15:11:47.985] [INFO] logs - Passed
[2017-11-09 15:11:47.970] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:11:47.986] [INFO] logs - Passed
[2017-11-09 15:11:47.973] [INFO] logs - Entering text Newuser1
[2017-11-09 15:11:47.986] [INFO] logs - Passed
[2017-11-09 15:11:47.975] [INFO] logs - Clicking on button
[2017-11-09 15:11:47.987] [INFO] logs - Passed
[2017-11-09 15:11:47.977] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:11:47.979] [INFO] logs - Entering text New Column
[2017-11-09 15:11:47.979] [INFO] logs - Entering text New Column
[2017-11-09 15:11:47.981] [INFO] logs - Clicking on button
[2017-11-09 15:11:47.982] [INFO] logs - Waiting for element
[2017-11-09 15:11:47.983] [INFO] logs - Passed
[2017-11-09 15:11:47.985] [INFO] logs - Passed
[2017-11-09 15:11:47.986] [INFO] logs - Passed
[2017-11-09 15:11:47.986] [INFO] logs - Passed
[2017-11-09 15:11:47.987] [INFO] logs - Passed
[2017-11-09 15:12:16.517] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:12:16.517] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:12:16.544] [INFO] logs - Navigating to URL
[2017-11-09 15:12:16.544] [INFO] logs - Navigating to URL
[2017-11-09 15:12:21.885] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:12:21.885] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:12:21.890] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:12:21.891] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:12:21.894] [INFO] logs - Entering text Newuser1
[2017-11-09 15:12:21.895] [INFO] logs - Clicking on button
[2017-11-09 15:12:21.898] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:12:21.899] [INFO] logs - Entering text New Column
[2017-11-09 15:12:21.900] [INFO] logs - Entering text New Column
[2017-11-09 15:12:21.901] [INFO] logs - Clicking on button
[2017-11-09 15:12:21.903] [INFO] logs - Waiting for element
[2017-11-09 15:12:21.890] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:12:21.891] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:12:21.894] [INFO] logs - Entering text Newuser1
[2017-11-09 15:12:21.895] [INFO] logs - Clicking on button
[2017-11-09 15:12:21.898] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:12:21.899] [INFO] logs - Entering text New Column
[2017-11-09 15:12:21.900] [INFO] logs - Entering text New Column
[2017-11-09 15:12:21.901] [INFO] logs - Clicking on button
[2017-11-09 15:12:21.903] [INFO] logs - Waiting for element
[2017-11-09 15:13:21.522] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:13:21.522] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:13:21.547] [INFO] logs - Navigating to URL
[2017-11-09 15:13:21.547] [INFO] logs - Navigating to URL
[2017-11-09 15:13:26.603] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:13:26.603] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:13:26.608] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:13:26.608] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:13:26.608] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:13:26.611] [INFO] logs - Entering text Newuser1
[2017-11-09 15:13:26.613] [INFO] logs - Clicking on button
[2017-11-09 15:13:26.608] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:13:26.615] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:13:26.611] [INFO] logs - Entering text Newuser1
[2017-11-09 15:13:26.616] [INFO] logs - Entering text New Column
[2017-11-09 15:13:26.613] [INFO] logs - Clicking on button
[2017-11-09 15:13:26.617] [INFO] logs - Entering text New Column
[2017-11-09 15:13:26.615] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:13:26.618] [INFO] logs - Clicking on button
[2017-11-09 15:13:26.616] [INFO] logs - Entering text New Column
[2017-11-09 15:13:26.619] [INFO] logs - Waiting for element
[2017-11-09 15:13:26.617] [INFO] logs - Entering text New Column
[2017-11-09 15:13:26.618] [INFO] logs - Clicking on button
[2017-11-09 15:13:26.619] [INFO] logs - Waiting for element
[2017-11-09 15:14:35.350] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:14:35.350] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:14:35.374] [INFO] logs - Navigating to URL
[2017-11-09 15:14:35.374] [INFO] logs - Navigating to URL
[2017-11-09 15:14:40.096] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:14:40.096] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:14:40.101] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:14:40.102] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:14:40.105] [INFO] logs - Entering text Newuser1
[2017-11-09 15:14:40.106] [INFO] logs - Clicking on button
[2017-11-09 15:14:40.109] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:14:40.110] [INFO] logs - Entering text New Column
[2017-11-09 15:14:40.111] [INFO] logs - Entering text New Column
[2017-11-09 15:14:40.112] [INFO] logs - Clicking on button
[2017-11-09 15:14:40.114] [INFO] logs - Waiting for element
[2017-11-09 15:14:40.101] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:14:40.102] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:14:40.105] [INFO] logs - Entering text Newuser1
[2017-11-09 15:14:40.106] [INFO] logs - Clicking on button
[2017-11-09 15:14:40.109] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:14:40.110] [INFO] logs - Entering text New Column
[2017-11-09 15:14:40.111] [INFO] logs - Entering text New Column
[2017-11-09 15:14:40.112] [INFO] logs - Clicking on button
[2017-11-09 15:14:40.114] [INFO] logs - Waiting for element
[2017-11-09 15:31:12.126] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:31:12.126] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:31:12.157] [INFO] logs - Navigating to URL
[2017-11-09 15:31:12.157] [INFO] logs - Navigating to URL
[2017-11-09 15:31:17.752] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:31:17.752] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:31:17.755] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:31:17.756] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:31:17.761] [INFO] logs - Entering text Newuser1
[2017-11-09 15:31:17.763] [INFO] logs - Clicking on button
[2017-11-09 15:31:17.766] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:31:17.768] [INFO] logs - Entering text New Column
[2017-11-09 15:31:17.769] [INFO] logs - Entering text New Column
[2017-11-09 15:31:17.770] [INFO] logs - Clicking on button
[2017-11-09 15:31:17.771] [INFO] logs - Waiting for element
[2017-11-09 15:31:17.772] [INFO] logs - Passed
[2017-11-09 15:31:17.773] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[1]/div/div[1]/h5']
[2017-11-09 15:31:17.775] [INFO] logs - Passed
[2017-11-09 15:31:17.755] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:31:17.776] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5']
[2017-11-09 15:31:17.777] [INFO] logs - Passed
[2017-11-09 15:31:17.756] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:31:17.777] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[3]/div/div[1]/h5']
[2017-11-09 15:31:17.761] [INFO] logs - Entering text Newuser1
[2017-11-09 15:31:17.779] [INFO] logs - Passed
[2017-11-09 15:31:17.763] [INFO] logs - Clicking on button
[2017-11-09 15:31:17.780] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[4]/div/div[1]/h5']
[2017-11-09 15:31:17.766] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:31:17.781] [INFO] logs - Passed
[2017-11-09 15:31:17.782] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[5]/div/div[1]/h5']
[2017-11-09 15:31:17.768] [INFO] logs - Entering text New Column
[2017-11-09 15:31:17.769] [INFO] logs - Entering text New Column
[2017-11-09 15:31:17.770] [INFO] logs - Clicking on button
[2017-11-09 15:31:17.771] [INFO] logs - Waiting for element
[2017-11-09 15:31:17.772] [INFO] logs - Passed
[2017-11-09 15:31:17.773] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[1]/div/div[1]/h5']
[2017-11-09 15:31:17.775] [INFO] logs - Passed
[2017-11-09 15:31:17.776] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5']
[2017-11-09 15:31:17.777] [INFO] logs - Passed
[2017-11-09 15:31:17.777] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[3]/div/div[1]/h5']
[2017-11-09 15:31:17.779] [INFO] logs - Passed
[2017-11-09 15:31:17.780] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[4]/div/div[1]/h5']
[2017-11-09 15:31:17.781] [INFO] logs - Passed
[2017-11-09 15:31:17.782] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[5]/div/div[1]/h5']
[2017-11-09 15:41:40.339] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:41:40.339] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:41:40.364] [INFO] logs - Navigating to URL
[2017-11-09 15:41:40.364] [INFO] logs - Navigating to URL
[2017-11-09 15:41:45.940] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:41:45.940] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:41:45.944] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:41:45.946] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:41:45.949] [INFO] logs - Entering text Newuser1
[2017-11-09 15:41:45.951] [INFO] logs - Clicking on button
[2017-11-09 15:41:45.953] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:41:45.954] [INFO] logs - Entering text New Column
[2017-11-09 15:41:45.955] [INFO] logs - Entering text New Column
[2017-11-09 15:41:45.944] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:41:45.957] [INFO] logs - Clicking on button
[2017-11-09 15:41:45.946] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:41:45.958] [INFO] logs - Waiting for element
[2017-11-09 15:41:45.949] [INFO] logs - Entering text Newuser1
[2017-11-09 15:41:45.951] [INFO] logs - Clicking on button
[2017-11-09 15:41:45.953] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:41:45.954] [INFO] logs - Entering text New Column
[2017-11-09 15:41:45.955] [INFO] logs - Entering text New Column
[2017-11-09 15:41:45.957] [INFO] logs - Clicking on button
[2017-11-09 15:41:45.958] [INFO] logs - Waiting for element
[2017-11-09 15:42:25.652] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:42:25.652] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:42:25.676] [INFO] logs - Navigating to URL
[2017-11-09 15:42:25.676] [INFO] logs - Navigating to URL
[2017-11-09 15:42:30.923] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:42:30.923] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:42:30.927] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:42:30.929] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:42:30.932] [INFO] logs - Entering text Newuser1
[2017-11-09 15:42:30.933] [INFO] logs - Clicking on button
[2017-11-09 15:42:30.935] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:42:30.936] [INFO] logs - Entering text New Column
[2017-11-09 15:42:30.937] [INFO] logs - Entering text New Column
[2017-11-09 15:42:30.938] [INFO] logs - Clicking on button
[2017-11-09 15:42:30.927] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:42:30.939] [INFO] logs - Waiting for element
[2017-11-09 15:42:30.929] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:42:30.932] [INFO] logs - Entering text Newuser1
[2017-11-09 15:42:30.933] [INFO] logs - Clicking on button
[2017-11-09 15:42:30.935] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:42:30.936] [INFO] logs - Entering text New Column
[2017-11-09 15:42:30.937] [INFO] logs - Entering text New Column
[2017-11-09 15:42:30.938] [INFO] logs - Clicking on button
[2017-11-09 15:42:30.939] [INFO] logs - Waiting for element
[2017-11-09 15:42:55.786] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:42:55.786] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:42:55.813] [INFO] logs - Navigating to URL
[2017-11-09 15:42:55.813] [INFO] logs - Navigating to URL
[2017-11-09 15:43:00.926] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:43:00.926] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:43:00.930] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:43:00.931] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:43:00.934] [INFO] logs - Entering text Newuser1
[2017-11-09 15:43:00.935] [INFO] logs - Clicking on button
[2017-11-09 15:43:00.937] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:43:00.938] [INFO] logs - Entering text New Column
[2017-11-09 15:43:00.930] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:43:00.939] [INFO] logs - Entering text New Column
[2017-11-09 15:43:00.931] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:43:00.941] [INFO] logs - Clicking on button
[2017-11-09 15:43:00.934] [INFO] logs - Entering text Newuser1
[2017-11-09 15:43:00.942] [INFO] logs - Waiting for element
[2017-11-09 15:43:00.935] [INFO] logs - Clicking on button
[2017-11-09 15:43:00.945] [INFO] logs - Test Exception message: columnName.get is not a function
[2017-11-09 15:43:00.937] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:43:00.938] [INFO] logs - Entering text New Column
[2017-11-09 15:43:00.939] [INFO] logs - Entering text New Column
[2017-11-09 15:43:00.941] [INFO] logs - Clicking on button
[2017-11-09 15:43:00.942] [INFO] logs - Waiting for element
[2017-11-09 15:43:00.945] [INFO] logs - Test Exception message: columnName.get is not a function
[2017-11-09 15:44:03.816] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:44:03.816] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:44:03.840] [INFO] logs - Navigating to URL
[2017-11-09 15:44:03.840] [INFO] logs - Navigating to URL
[2017-11-09 15:44:08.878] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:44:08.878] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:44:08.882] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:44:08.883] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:44:08.886] [INFO] logs - Entering text Newuser1
[2017-11-09 15:44:08.887] [INFO] logs - Clicking on button
[2017-11-09 15:44:08.890] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:44:08.882] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:44:08.892] [INFO] logs - Entering text New Column
[2017-11-09 15:44:08.893] [INFO] logs - Entering text New Column
[2017-11-09 15:44:08.883] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:44:08.894] [INFO] logs - Clicking on button
[2017-11-09 15:44:08.886] [INFO] logs - Entering text Newuser1
[2017-11-09 15:44:08.895] [INFO] logs - Waiting for element
[2017-11-09 15:44:08.887] [INFO] logs - Clicking on button
[2017-11-09 15:44:08.898] [INFO] logs - undefined
[2017-11-09 15:44:08.890] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:44:08.899] [INFO] logs - undefined
[2017-11-09 15:44:08.892] [INFO] logs - Entering text New Column
[2017-11-09 15:44:08.893] [INFO] logs - Entering text New Column
[2017-11-09 15:44:08.894] [INFO] logs - Clicking on button
[2017-11-09 15:44:08.895] [INFO] logs - Waiting for element
[2017-11-09 15:44:08.898] [INFO] logs - undefined
[2017-11-09 15:44:08.899] [INFO] logs - undefined
[2017-11-09 15:44:26.267] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:44:26.267] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:44:26.291] [INFO] logs - Navigating to URL
[2017-11-09 15:44:26.291] [INFO] logs - Navigating to URL
[2017-11-09 15:44:31.619] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:44:31.619] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:44:31.623] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:44:31.624] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:44:31.627] [INFO] logs - Entering text Newuser1
[2017-11-09 15:44:31.628] [INFO] logs - Clicking on button
[2017-11-09 15:44:31.631] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:44:31.632] [INFO] logs - Entering text New Column
[2017-11-09 15:44:31.634] [INFO] logs - Entering text New Column
[2017-11-09 15:44:31.635] [INFO] logs - Clicking on button
[2017-11-09 15:44:31.636] [INFO] logs - Waiting for element
[2017-11-09 15:44:31.639] [INFO] logs - Test Exception message: columnName.get is not a function
[2017-11-09 15:44:31.623] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:44:31.624] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:44:31.627] [INFO] logs - Entering text Newuser1
[2017-11-09 15:44:31.628] [INFO] logs - Clicking on button
[2017-11-09 15:44:31.631] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:44:31.632] [INFO] logs - Entering text New Column
[2017-11-09 15:44:31.634] [INFO] logs - Entering text New Column
[2017-11-09 15:44:31.635] [INFO] logs - Clicking on button
[2017-11-09 15:44:31.636] [INFO] logs - Waiting for element
[2017-11-09 15:44:31.639] [INFO] logs - Test Exception message: columnName.get is not a function
[2017-11-09 15:45:03.114] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:45:03.114] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:45:03.140] [INFO] logs - Navigating to URL
[2017-11-09 15:45:03.140] [INFO] logs - Navigating to URL
[2017-11-09 15:45:08.098] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:45:08.098] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:45:08.103] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:45:08.104] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:45:08.108] [INFO] logs - Entering text Newuser1
[2017-11-09 15:45:08.110] [INFO] logs - Clicking on button
[2017-11-09 15:45:08.112] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:45:08.113] [INFO] logs - Entering text New Column
[2017-11-09 15:45:08.115] [INFO] logs - Entering text New Column
[2017-11-09 15:45:08.117] [INFO] logs - Clicking on button
[2017-11-09 15:45:08.118] [INFO] logs - Waiting for element
[2017-11-09 15:45:08.120] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[1]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[1]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 15:45:08.103] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:45:08.142] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 15:45:08.104] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:45:08.108] [INFO] logs - Entering text Newuser1
[2017-11-09 15:45:08.110] [INFO] logs - Clicking on button
[2017-11-09 15:45:08.112] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:45:08.113] [INFO] logs - Entering text New Column
[2017-11-09 15:45:08.115] [INFO] logs - Entering text New Column
[2017-11-09 15:45:08.117] [INFO] logs - Clicking on button
[2017-11-09 15:45:08.118] [INFO] logs - Waiting for element
[2017-11-09 15:45:08.120] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[1]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[1]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 15:45:08.142] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 15:46:53.924] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:46:53.924] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 15:46:53.948] [INFO] logs - Navigating to URL
[2017-11-09 15:46:53.948] [INFO] logs - Navigating to URL
[2017-11-09 15:46:59.790] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:46:59.790] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 15:46:59.795] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:46:59.795] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:46:59.798] [INFO] logs - Entering text Newuser1
[2017-11-09 15:46:59.795] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 15:46:59.800] [INFO] logs - Clicking on button
[2017-11-09 15:46:59.803] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:46:59.795] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 15:46:59.805] [INFO] logs - Entering text New Column
[2017-11-09 15:46:59.806] [INFO] logs - Entering text New Column
[2017-11-09 15:46:59.808] [INFO] logs - Clicking on button
[2017-11-09 15:46:59.798] [INFO] logs - Entering text Newuser1
[2017-11-09 15:46:59.809] [INFO] logs - Waiting for element
[2017-11-09 15:46:59.800] [INFO] logs - Clicking on button
[2017-11-09 15:46:59.803] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 15:46:59.805] [INFO] logs - Entering text New Column
[2017-11-09 15:46:59.806] [INFO] logs - Entering text New Column
[2017-11-09 15:46:59.808] [INFO] logs - Clicking on button
[2017-11-09 15:46:59.809] [INFO] logs - Waiting for element
[2017-11-09 16:10:30.049] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:10:30.049] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:10:30.072] [INFO] logs - Navigating to URL
[2017-11-09 16:10:30.072] [INFO] logs - Navigating to URL
[2017-11-09 16:10:35.877] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:10:35.877] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:10:35.880] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:10:35.880] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:10:35.881] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:10:35.881] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:10:35.884] [INFO] logs - Entering text Newuser1
[2017-11-09 16:10:35.884] [INFO] logs - Entering text Newuser1
[2017-11-09 16:10:35.886] [INFO] logs - Clicking on button
[2017-11-09 16:10:35.886] [INFO] logs - Clicking on button
[2017-11-09 16:10:35.888] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:10:35.888] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:10:35.890] [INFO] logs - Entering text New Column
[2017-11-09 16:10:35.890] [INFO] logs - Entering text New Column
[2017-11-09 16:10:35.891] [INFO] logs - Entering text New Column
[2017-11-09 16:10:35.891] [INFO] logs - Entering text New Column
[2017-11-09 16:10:35.892] [INFO] logs - Clicking on button
[2017-11-09 16:10:35.892] [INFO] logs - Clicking on button
[2017-11-09 16:10:35.894] [INFO] logs - Waiting for element
[2017-11-09 16:10:35.894] [INFO] logs - Waiting for element
[2017-11-09 16:11:56.993] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:11:56.993] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:11:57.018] [INFO] logs - Navigating to URL
[2017-11-09 16:11:57.018] [INFO] logs - Navigating to URL
[2017-11-09 16:12:02.135] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:12:02.135] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:12:02.139] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:12:02.140] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:12:02.143] [INFO] logs - Entering text Newuser1
[2017-11-09 16:12:02.145] [INFO] logs - Clicking on button
[2017-11-09 16:12:02.148] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:12:02.149] [INFO] logs - Entering text New Column
[2017-11-09 16:12:02.150] [INFO] logs - Entering text New Column
[2017-11-09 16:12:02.152] [INFO] logs - Clicking on button
[2017-11-09 16:12:02.153] [INFO] logs - Waiting for element
[2017-11-09 16:12:02.139] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:12:02.140] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:12:02.143] [INFO] logs - Entering text Newuser1
[2017-11-09 16:12:02.145] [INFO] logs - Clicking on button
[2017-11-09 16:12:02.148] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:12:02.149] [INFO] logs - Entering text New Column
[2017-11-09 16:12:02.150] [INFO] logs - Entering text New Column
[2017-11-09 16:12:02.152] [INFO] logs - Clicking on button
[2017-11-09 16:12:02.153] [INFO] logs - Waiting for element
[2017-11-09 16:12:56.170] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:12:56.170] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:12:56.195] [INFO] logs - Navigating to URL
[2017-11-09 16:12:56.195] [INFO] logs - Navigating to URL
[2017-11-09 16:13:01.329] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:13:01.329] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:13:01.333] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:13:01.334] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:13:01.338] [INFO] logs - Entering text Newuser1
[2017-11-09 16:13:01.341] [INFO] logs - Clicking on button
[2017-11-09 16:13:01.343] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:13:01.344] [INFO] logs - Entering text New Column
[2017-11-09 16:13:01.346] [INFO] logs - Entering text New Column
[2017-11-09 16:13:01.347] [INFO] logs - Clicking on button
[2017-11-09 16:13:01.348] [INFO] logs - Waiting for element
[2017-11-09 16:13:01.333] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:13:01.334] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:13:01.338] [INFO] logs - Entering text Newuser1
[2017-11-09 16:13:01.341] [INFO] logs - Clicking on button
[2017-11-09 16:13:01.343] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:13:01.344] [INFO] logs - Entering text New Column
[2017-11-09 16:13:01.346] [INFO] logs - Entering text New Column
[2017-11-09 16:13:01.347] [INFO] logs - Clicking on button
[2017-11-09 16:13:01.348] [INFO] logs - Waiting for element
[2017-11-09 16:18:32.210] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:18:32.210] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:18:32.233] [INFO] logs - Navigating to URL
[2017-11-09 16:18:32.233] [INFO] logs - Navigating to URL
[2017-11-09 16:18:37.793] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:18:37.793] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:18:37.797] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:18:37.797] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:18:37.801] [INFO] logs - Entering text Newuser1
[2017-11-09 16:18:37.802] [INFO] logs - Clicking on button
[2017-11-09 16:18:37.805] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:18:37.806] [INFO] logs - Entering text New Column
[2017-11-09 16:18:37.807] [INFO] logs - Entering text New Column
[2017-11-09 16:18:37.808] [INFO] logs - Clicking on button
[2017-11-09 16:18:37.809] [INFO] logs - Waiting for element
[2017-11-09 16:18:37.797] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:18:37.797] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:18:37.801] [INFO] logs - Entering text Newuser1
[2017-11-09 16:18:37.802] [INFO] logs - Clicking on button
[2017-11-09 16:18:37.805] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:18:37.806] [INFO] logs - Entering text New Column
[2017-11-09 16:18:37.807] [INFO] logs - Entering text New Column
[2017-11-09 16:18:37.808] [INFO] logs - Clicking on button
[2017-11-09 16:18:37.809] [INFO] logs - Waiting for element
[2017-11-09 16:19:28.700] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:19:28.700] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:19:28.726] [INFO] logs - Navigating to URL
[2017-11-09 16:19:28.726] [INFO] logs - Navigating to URL
[2017-11-09 16:19:33.943] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:19:33.943] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:19:33.947] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:19:33.948] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:19:33.951] [INFO] logs - Entering text Newuser1
[2017-11-09 16:19:33.952] [INFO] logs - Clicking on button
[2017-11-09 16:19:33.954] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:19:33.947] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:19:33.955] [INFO] logs - Entering text New Column
[2017-11-09 16:19:33.948] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:19:33.956] [INFO] logs - Entering text New Column
[2017-11-09 16:19:33.951] [INFO] logs - Entering text Newuser1
[2017-11-09 16:19:33.957] [INFO] logs - Clicking on button
[2017-11-09 16:19:33.952] [INFO] logs - Clicking on button
[2017-11-09 16:19:33.958] [INFO] logs - Waiting for element
[2017-11-09 16:19:33.954] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:19:33.955] [INFO] logs - Entering text New Column
[2017-11-09 16:19:33.956] [INFO] logs - Entering text New Column
[2017-11-09 16:19:33.957] [INFO] logs - Clicking on button
[2017-11-09 16:19:33.958] [INFO] logs - Waiting for element
[2017-11-09 16:22:26.273] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:22:26.273] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:22:26.297] [INFO] logs - Navigating to URL
[2017-11-09 16:22:26.297] [INFO] logs - Navigating to URL
[2017-11-09 16:22:31.710] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:22:31.710] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:22:31.714] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:22:31.715] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:22:31.719] [INFO] logs - Entering text Newuser1
[2017-11-09 16:22:31.720] [INFO] logs - Clicking on button
[2017-11-09 16:22:31.722] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:22:31.724] [INFO] logs - Entering text New Column
[2017-11-09 16:22:31.725] [INFO] logs - Entering text New Column
[2017-11-09 16:22:31.727] [INFO] logs - Clicking on button
[2017-11-09 16:22:31.728] [INFO] logs - Waiting for element
[2017-11-09 16:22:31.714] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:22:31.715] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:22:31.719] [INFO] logs - Entering text Newuser1
[2017-11-09 16:22:31.720] [INFO] logs - Clicking on button
[2017-11-09 16:22:31.722] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:22:31.724] [INFO] logs - Entering text New Column
[2017-11-09 16:22:31.725] [INFO] logs - Entering text New Column
[2017-11-09 16:22:31.727] [INFO] logs - Clicking on button
[2017-11-09 16:22:31.728] [INFO] logs - Waiting for element
[2017-11-09 16:36:09.194] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:36:09.194] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:36:09.218] [INFO] logs - Navigating to URL
[2017-11-09 16:36:09.218] [INFO] logs - Navigating to URL
[2017-11-09 16:36:14.515] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:36:14.515] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:36:14.518] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:36:14.518] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:36:14.519] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:36:14.519] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:36:14.523] [INFO] logs - Entering text Newuser1
[2017-11-09 16:36:14.524] [INFO] logs - Clicking on button
[2017-11-09 16:36:14.523] [INFO] logs - Entering text Newuser1
[2017-11-09 16:36:14.527] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:36:14.524] [INFO] logs - Clicking on button
[2017-11-09 16:36:14.529] [INFO] logs - Entering text New Columns
[2017-11-09 16:36:14.527] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:36:14.530] [INFO] logs - Entering text New Columns
[2017-11-09 16:36:14.531] [INFO] logs - Clicking on button
[2017-11-09 16:36:14.529] [INFO] logs - Entering text New Columns
[2017-11-09 16:36:14.530] [INFO] logs - Entering text New Columns
[2017-11-09 16:36:14.531] [INFO] logs - Clicking on button
[2017-11-09 16:36:17.426] [INFO] logs - Navigating to URL
[2017-11-09 16:36:17.426] [INFO] logs - Navigating to URL
[2017-11-09 16:36:19.675] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:36:19.675] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:36:19.682] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:36:19.685] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:36:19.698] [INFO] logs - Entering text Newuser1
[2017-11-09 16:36:19.701] [INFO] logs - Clicking on button
[2017-11-09 16:36:19.682] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:36:19.685] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:36:19.698] [INFO] logs - Entering text Newuser1
[2017-11-09 16:36:19.701] [INFO] logs - Clicking on button
[2017-11-09 16:37:45.397] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:37:45.397] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:37:45.422] [INFO] logs - Navigating to URL
[2017-11-09 16:37:45.422] [INFO] logs - Navigating to URL
[2017-11-09 16:37:50.620] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:37:50.620] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:37:50.625] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:37:50.625] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:37:50.626] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:37:50.626] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:37:50.629] [INFO] logs - Entering text Newuser1
[2017-11-09 16:37:50.630] [INFO] logs - Clicking on button
[2017-11-09 16:37:50.629] [INFO] logs - Entering text Newuser1
[2017-11-09 16:37:50.633] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:37:50.634] [INFO] logs - Entering text New Columns
[2017-11-09 16:37:50.630] [INFO] logs - Clicking on button
[2017-11-09 16:37:50.635] [INFO] logs - Entering text New Columns
[2017-11-09 16:37:50.633] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:37:50.637] [INFO] logs - Clicking on button
[2017-11-09 16:37:50.634] [INFO] logs - Entering text New Columns
[2017-11-09 16:37:50.635] [INFO] logs - Entering text New Columns
[2017-11-09 16:37:50.637] [INFO] logs - Clicking on button
[2017-11-09 16:37:53.479] [INFO] logs - Navigating to URL
[2017-11-09 16:37:53.479] [INFO] logs - Navigating to URL
[2017-11-09 16:37:55.695] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:37:55.695] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:37:55.704] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:37:55.717] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:37:55.718] [INFO] logs - Entering text Newuser1
[2017-11-09 16:37:55.720] [INFO] logs - Clicking on button
[2017-11-09 16:37:55.704] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:37:55.717] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:37:55.718] [INFO] logs - Entering text Newuser1
[2017-11-09 16:37:55.720] [INFO] logs - Clicking on button
[2017-11-09 16:38:25.798] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:38:25.798] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:38:25.822] [INFO] logs - Navigating to URL
[2017-11-09 16:38:25.822] [INFO] logs - Navigating to URL
[2017-11-09 16:38:30.403] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:38:30.403] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:38:30.407] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:38:30.408] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:38:30.412] [INFO] logs - Entering text Newuser1
[2017-11-09 16:38:30.413] [INFO] logs - Clicking on button
[2017-11-09 16:38:30.415] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:38:30.416] [INFO] logs - Entering text New Columns
[2017-11-09 16:38:30.418] [INFO] logs - Entering text New Columns
[2017-11-09 16:38:30.419] [INFO] logs - Clicking on button
[2017-11-09 16:38:30.407] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:38:30.408] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:38:30.412] [INFO] logs - Entering text Newuser1
[2017-11-09 16:38:30.413] [INFO] logs - Clicking on button
[2017-11-09 16:38:30.415] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:38:30.416] [INFO] logs - Entering text New Columns
[2017-11-09 16:38:30.418] [INFO] logs - Entering text New Columns
[2017-11-09 16:38:30.419] [INFO] logs - Clicking on button
[2017-11-09 16:38:33.186] [INFO] logs - Navigating to URL
[2017-11-09 16:38:33.186] [INFO] logs - Navigating to URL
[2017-11-09 16:38:35.399] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:38:35.399] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:38:35.402] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:38:35.402] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:38:35.404] [INFO] logs - Entering text Newuser1
[2017-11-09 16:38:35.405] [INFO] logs - Clicking on button
[2017-11-09 16:38:35.402] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:38:35.402] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:38:35.404] [INFO] logs - Entering text Newuser1
[2017-11-09 16:38:35.405] [INFO] logs - Clicking on button
[2017-11-09 16:42:51.701] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:42:51.701] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:42:51.725] [INFO] logs - Navigating to URL
[2017-11-09 16:42:51.725] [INFO] logs - Navigating to URL
[2017-11-09 16:42:56.893] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:42:56.893] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:42:56.897] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:42:56.898] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:42:56.901] [INFO] logs - Entering text Newuser1
[2017-11-09 16:42:56.902] [INFO] logs - Clicking on button
[2017-11-09 16:42:56.905] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:42:56.906] [INFO] logs - Entering text New Columns
[2017-11-09 16:42:56.907] [INFO] logs - Entering text New Columns
[2017-11-09 16:42:56.908] [INFO] logs - Clicking on button
[2017-11-09 16:42:56.897] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:42:56.909] [INFO] logs - waiting for New columns
[2017-11-09 16:42:56.898] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:42:56.910] [INFO] logs - Now EC_Timeout
[2017-11-09 16:42:56.901] [INFO] logs - Entering text Newuser1
[2017-11-09 16:42:56.911] [INFO] logs - browser.wait
[2017-11-09 16:42:56.902] [INFO] logs - Clicking on button
[2017-11-09 16:42:56.905] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:42:56.913] [INFO] logs - browser.wait
[2017-11-09 16:42:56.906] [INFO] logs - Entering text New Columns
[2017-11-09 16:42:56.907] [INFO] logs - Entering text New Columns
[2017-11-09 16:42:56.915] [INFO] logs - browser.clear
[2017-11-09 16:42:56.908] [INFO] logs - Clicking on button
[2017-11-09 16:42:56.909] [INFO] logs - waiting for New columns
[2017-11-09 16:42:56.910] [INFO] logs - Now EC_Timeout
[2017-11-09 16:42:56.911] [INFO] logs - browser.wait
[2017-11-09 16:42:56.913] [INFO] logs - browser.wait
[2017-11-09 16:42:56.915] [INFO] logs - browser.clear
[2017-11-09 16:42:59.112] [INFO] logs - targetEle.getText
[2017-11-09 16:42:59.112] [INFO] logs - targetEle.getText
[2017-11-09 16:42:59.118] [INFO] logs - complete
[2017-11-09 16:42:59.118] [INFO] logs - complete
[2017-11-09 16:42:59.701] [INFO] logs - Navigating to URL
[2017-11-09 16:42:59.701] [INFO] logs - Navigating to URL
[2017-11-09 16:43:01.921] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:43:01.921] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:43:01.930] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:43:01.932] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:43:01.936] [INFO] logs - Entering text Newuser1
[2017-11-09 16:43:01.938] [INFO] logs - Clicking on button
[2017-11-09 16:43:01.930] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:43:01.932] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:43:01.936] [INFO] logs - Entering text Newuser1
[2017-11-09 16:43:01.938] [INFO] logs - Clicking on button
[2017-11-09 16:46:31.709] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:46:31.709] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:46:31.735] [INFO] logs - Navigating to URL
[2017-11-09 16:46:31.735] [INFO] logs - Navigating to URL
[2017-11-09 16:46:37.054] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:46:37.054] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:46:37.058] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:46:37.059] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:46:37.063] [INFO] logs - Entering text Newuser1
[2017-11-09 16:46:37.064] [INFO] logs - Clicking on button
[2017-11-09 16:46:37.066] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:46:37.068] [INFO] logs - Entering text New Columns
[2017-11-09 16:46:37.069] [INFO] logs - Entering text New Columns
[2017-11-09 16:46:37.070] [INFO] logs - Clicking on button
[2017-11-09 16:46:37.072] [INFO] logs - waiting for New columns
[2017-11-09 16:46:37.073] [INFO] logs - Now EC_Timeout
[2017-11-09 16:46:37.058] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:46:37.076] [INFO] logs - browser.wait
[2017-11-09 16:46:37.076] [INFO] logs - browser.wait
[2017-11-09 16:46:37.059] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:46:37.077] [INFO] logs - browser.clear
[2017-11-09 16:46:37.063] [INFO] logs - Entering text Newuser1
[2017-11-09 16:46:37.064] [INFO] logs - Clicking on button
[2017-11-09 16:46:37.066] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:46:37.068] [INFO] logs - Entering text New Columns
[2017-11-09 16:46:37.069] [INFO] logs - Entering text New Columns
[2017-11-09 16:46:37.070] [INFO] logs - Clicking on button
[2017-11-09 16:46:37.072] [INFO] logs - waiting for New columns
[2017-11-09 16:46:37.073] [INFO] logs - Now EC_Timeout
[2017-11-09 16:46:37.076] [INFO] logs - browser.wait
[2017-11-09 16:46:37.076] [INFO] logs - browser.wait
[2017-11-09 16:46:37.077] [INFO] logs - browser.clear
[2017-11-09 16:46:39.382] [INFO] logs - targetEle.getText
[2017-11-09 16:46:39.382] [INFO] logs - targetEle.getText
[2017-11-09 16:46:39.387] [INFO] logs - complete
[2017-11-09 16:46:39.387] [INFO] logs - complete
[2017-11-09 16:46:39.978] [INFO] logs - Navigating to URL
[2017-11-09 16:46:39.978] [INFO] logs - Navigating to URL
[2017-11-09 16:46:42.290] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:46:42.290] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:46:42.303] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:46:42.312] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:46:42.315] [INFO] logs - Entering text Newuser1
[2017-11-09 16:46:42.318] [INFO] logs - Clicking on button
[2017-11-09 16:46:42.303] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:46:42.312] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:46:42.315] [INFO] logs - Entering text Newuser1
[2017-11-09 16:46:42.318] [INFO] logs - Clicking on button
[2017-11-09 16:47:14.659] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:47:14.659] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:47:14.682] [INFO] logs - Navigating to URL
[2017-11-09 16:47:14.682] [INFO] logs - Navigating to URL
[2017-11-09 16:47:20.224] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:47:20.224] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:47:20.228] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:47:20.228] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:47:20.229] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:47:20.229] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:47:20.232] [INFO] logs - Entering text Newuser1
[2017-11-09 16:47:20.233] [INFO] logs - Clicking on button
[2017-11-09 16:47:20.232] [INFO] logs - Entering text Newuser1
[2017-11-09 16:47:20.237] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:47:20.238] [INFO] logs - Entering text New Columns
[2017-11-09 16:47:20.233] [INFO] logs - Clicking on button
[2017-11-09 16:47:20.239] [INFO] logs - Entering text New Columns
[2017-11-09 16:47:20.237] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:47:20.238] [INFO] logs - Entering text New Columns
[2017-11-09 16:47:20.240] [INFO] logs - Clicking on button
[2017-11-09 16:47:20.239] [INFO] logs - Entering text New Columns
[2017-11-09 16:47:20.241] [INFO] logs - waiting for New columns
[2017-11-09 16:47:20.240] [INFO] logs - Clicking on button
[2017-11-09 16:47:20.242] [INFO] logs - Now EC_Timeout
[2017-11-09 16:47:20.241] [INFO] logs - waiting for New columns
[2017-11-09 16:47:20.245] [INFO] logs - browser.wait
[2017-11-09 16:47:20.242] [INFO] logs - Now EC_Timeout
[2017-11-09 16:47:20.246] [INFO] logs - browser.wait
[2017-11-09 16:47:20.245] [INFO] logs - browser.wait
[2017-11-09 16:47:20.247] [INFO] logs - browser.clear
[2017-11-09 16:47:20.246] [INFO] logs - browser.wait
[2017-11-09 16:47:20.247] [INFO] logs - browser.clear
[2017-11-09 16:47:22.382] [INFO] logs - targetEle.getText
[2017-11-09 16:47:22.382] [INFO] logs - targetEle.getText
[2017-11-09 16:47:22.389] [INFO] logs - complete
[2017-11-09 16:47:22.389] [INFO] logs - complete
[2017-11-09 16:47:22.937] [INFO] logs - Navigating to URL
[2017-11-09 16:47:22.937] [INFO] logs - Navigating to URL
[2017-11-09 16:47:25.228] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:47:25.228] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:47:25.251] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:47:25.252] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:47:25.256] [INFO] logs - Entering text Newuser1
[2017-11-09 16:47:25.257] [INFO] logs - Clicking on button
[2017-11-09 16:47:25.251] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:47:25.252] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:47:25.256] [INFO] logs - Entering text Newuser1
[2017-11-09 16:47:25.257] [INFO] logs - Clicking on button
[2017-11-09 16:51:00.630] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:51:00.630] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:51:00.662] [INFO] logs - Navigating to URL
[2017-11-09 16:51:00.662] [INFO] logs - Navigating to URL
[2017-11-09 16:51:06.221] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:51:06.221] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:51:06.225] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:51:06.227] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:51:06.225] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:51:06.234] [INFO] logs - Entering text Newuser1
[2017-11-09 16:51:06.235] [INFO] logs - Clicking on button
[2017-11-09 16:51:06.227] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:51:06.237] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:51:06.239] [INFO] logs - Entering text New Columns
[2017-11-09 16:51:06.234] [INFO] logs - Entering text Newuser1
[2017-11-09 16:51:06.240] [INFO] logs - Entering text New Columns
[2017-11-09 16:51:06.235] [INFO] logs - Clicking on button
[2017-11-09 16:51:06.242] [INFO] logs - Clicking on button
[2017-11-09 16:51:06.237] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:51:06.239] [INFO] logs - Entering text New Columns
[2017-11-09 16:51:06.240] [INFO] logs - Entering text New Columns
[2017-11-09 16:51:06.242] [INFO] logs - Clicking on button
[2017-11-09 16:51:08.933] [INFO] logs - Navigating to URL
[2017-11-09 16:51:08.933] [INFO] logs - Navigating to URL
[2017-11-09 16:51:11.249] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:51:11.249] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:51:11.255] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:51:11.256] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:51:11.260] [INFO] logs - Entering text Newuser1
[2017-11-09 16:51:11.266] [INFO] logs - Clicking on button
[2017-11-09 16:51:11.270] [INFO] logs - A
[2017-11-09 16:51:11.271] [INFO] logs - B
[2017-11-09 16:51:11.274] [INFO] logs - C
[2017-11-09 16:51:11.276] [INFO] logs - D
[2017-11-09 16:51:11.284] [INFO] logs - E
[2017-11-09 16:51:11.255] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:51:11.256] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:51:11.260] [INFO] logs - Entering text Newuser1
[2017-11-09 16:51:11.266] [INFO] logs - Clicking on button
[2017-11-09 16:51:11.270] [INFO] logs - A
[2017-11-09 16:51:11.271] [INFO] logs - B
[2017-11-09 16:51:11.274] [INFO] logs - C
[2017-11-09 16:51:11.276] [INFO] logs - D
[2017-11-09 16:51:11.284] [INFO] logs - E
[2017-11-09 16:52:47.389] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:52:47.389] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:52:47.416] [INFO] logs - Navigating to URL
[2017-11-09 16:52:47.416] [INFO] logs - Navigating to URL
[2017-11-09 16:52:52.806] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:52:52.806] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:52:52.811] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:52:52.814] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:52:52.822] [INFO] logs - Entering text Newuser1
[2017-11-09 16:52:52.811] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:52:52.824] [INFO] logs - Clicking on button
[2017-11-09 16:52:52.814] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:52:52.828] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:52:52.822] [INFO] logs - Entering text Newuser1
[2017-11-09 16:52:52.830] [INFO] logs - Entering text New Columns
[2017-11-09 16:52:52.824] [INFO] logs - Clicking on button
[2017-11-09 16:52:52.828] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:52:52.834] [INFO] logs - Entering text New Columns
[2017-11-09 16:52:52.830] [INFO] logs - Entering text New Columns
[2017-11-09 16:52:52.837] [INFO] logs - Clicking on button
[2017-11-09 16:52:52.834] [INFO] logs - Entering text New Columns
[2017-11-09 16:52:52.837] [INFO] logs - Clicking on button
[2017-11-09 16:52:55.463] [INFO] logs - Navigating to URL
[2017-11-09 16:52:55.463] [INFO] logs - Navigating to URL
[2017-11-09 16:52:57.726] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:52:57.726] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:52:57.736] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:52:57.737] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:52:57.741] [INFO] logs - Entering text Newuser1
[2017-11-09 16:52:57.746] [INFO] logs - Clicking on button
[2017-11-09 16:52:57.749] [INFO] logs - A
[2017-11-09 16:52:57.750] [INFO] logs - B
[2017-11-09 16:52:57.752] [INFO] logs - C
[2017-11-09 16:52:57.759] [INFO] logs - D
[2017-11-09 16:52:57.760] [INFO] logs - E
[2017-11-09 16:52:57.736] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:52:57.737] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:52:57.741] [INFO] logs - Entering text Newuser1
[2017-11-09 16:52:57.746] [INFO] logs - Clicking on button
[2017-11-09 16:52:57.749] [INFO] logs - A
[2017-11-09 16:52:57.750] [INFO] logs - B
[2017-11-09 16:52:57.752] [INFO] logs - C
[2017-11-09 16:52:57.759] [INFO] logs - D
[2017-11-09 16:52:57.760] [INFO] logs - E
[2017-11-09 16:54:08.622] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:54:08.622] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:54:08.650] [INFO] logs - Navigating to URL
[2017-11-09 16:54:08.650] [INFO] logs - Navigating to URL
[2017-11-09 16:54:14.384] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:54:14.384] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:54:14.389] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:54:14.390] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:54:14.396] [INFO] logs - Entering text Newuser1
[2017-11-09 16:54:14.401] [INFO] logs - Clicking on button
[2017-11-09 16:54:14.404] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:54:14.405] [INFO] logs - Entering text New Columns
[2017-11-09 16:54:14.407] [INFO] logs - Entering text New Columns
[2017-11-09 16:54:14.408] [INFO] logs - Clicking on button
[2017-11-09 16:54:14.389] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:54:14.390] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:54:14.396] [INFO] logs - Entering text Newuser1
[2017-11-09 16:54:14.401] [INFO] logs - Clicking on button
[2017-11-09 16:54:14.404] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:54:14.405] [INFO] logs - Entering text New Columns
[2017-11-09 16:54:14.407] [INFO] logs - Entering text New Columns
[2017-11-09 16:54:14.408] [INFO] logs - Clicking on button
[2017-11-09 16:54:17.426] [INFO] logs - Navigating to URL
[2017-11-09 16:54:17.426] [INFO] logs - Navigating to URL
[2017-11-09 16:54:19.708] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:54:19.708] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:54:19.714] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:54:19.716] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:54:19.718] [INFO] logs - Entering text Newuser1
[2017-11-09 16:54:19.719] [INFO] logs - Clicking on button
[2017-11-09 16:54:19.721] [INFO] logs - A
[2017-11-09 16:54:19.723] [INFO] logs - B
[2017-11-09 16:54:19.727] [INFO] logs - C
[2017-11-09 16:54:19.714] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:54:19.729] [INFO] logs - D
[2017-11-09 16:54:19.735] [INFO] logs - E
[2017-11-09 16:54:19.716] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:54:19.718] [INFO] logs - Entering text Newuser1
[2017-11-09 16:54:19.719] [INFO] logs - Clicking on button
[2017-11-09 16:54:19.721] [INFO] logs - A
[2017-11-09 16:54:19.723] [INFO] logs - B
[2017-11-09 16:54:19.727] [INFO] logs - C
[2017-11-09 16:54:19.729] [INFO] logs - D
[2017-11-09 16:54:19.735] [INFO] logs - E
[2017-11-09 16:57:48.492] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:57:48.492] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:57:48.524] [INFO] logs - Navigating to URL
[2017-11-09 16:57:48.524] [INFO] logs - Navigating to URL
[2017-11-09 16:57:54.172] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:57:54.172] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:57:54.177] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:57:54.177] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:57:54.178] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:57:54.178] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:57:54.183] [INFO] logs - Entering text Newuser1
[2017-11-09 16:57:54.183] [INFO] logs - Entering text Newuser1
[2017-11-09 16:57:54.187] [INFO] logs - Clicking on button
[2017-11-09 16:57:54.187] [INFO] logs - Clicking on button
[2017-11-09 16:57:54.191] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:57:54.191] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:57:54.192] [INFO] logs - Entering text New Columns
[2017-11-09 16:57:54.192] [INFO] logs - Entering text New Columns
[2017-11-09 16:57:54.194] [INFO] logs - Entering text New Columns
[2017-11-09 16:57:54.194] [INFO] logs - Entering text New Columns
[2017-11-09 16:57:54.199] [INFO] logs - Clicking on button
[2017-11-09 16:57:54.199] [INFO] logs - Clicking on button
[2017-11-09 16:57:56.859] [INFO] logs - Navigating to URL
[2017-11-09 16:57:56.859] [INFO] logs - Navigating to URL
[2017-11-09 16:57:59.225] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:57:59.225] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:57:59.240] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:57:59.241] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:57:59.243] [INFO] logs - Entering text Newuser1
[2017-11-09 16:57:59.244] [INFO] logs - Clicking on button
[2017-11-09 16:57:59.246] [INFO] logs - A
[2017-11-09 16:57:59.248] [INFO] logs - B
[2017-11-09 16:57:59.254] [INFO] logs - C
[2017-11-09 16:57:59.255] [INFO] logs - D
[2017-11-09 16:57:59.260] [INFO] logs - E
[2017-11-09 16:57:59.240] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:57:59.241] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:57:59.243] [INFO] logs - Entering text Newuser1
[2017-11-09 16:57:59.244] [INFO] logs - Clicking on button
[2017-11-09 16:57:59.246] [INFO] logs - A
[2017-11-09 16:57:59.248] [INFO] logs - B
[2017-11-09 16:57:59.254] [INFO] logs - C
[2017-11-09 16:57:59.255] [INFO] logs - D
[2017-11-09 16:57:59.260] [INFO] logs - E
[2017-11-09 16:58:58.195] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:58:58.195] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 16:58:58.224] [INFO] logs - Navigating to URL
[2017-11-09 16:58:58.224] [INFO] logs - Navigating to URL
[2017-11-09 16:59:03.969] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:59:03.969] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:59:03.975] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:59:03.975] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 16:59:03.976] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:59:03.976] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:59:03.981] [INFO] logs - Entering text Newuser1
[2017-11-09 16:59:03.981] [INFO] logs - Entering text Newuser1
[2017-11-09 16:59:03.984] [INFO] logs - Clicking on button
[2017-11-09 16:59:03.984] [INFO] logs - Clicking on button
[2017-11-09 16:59:03.986] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:59:03.986] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 16:59:03.988] [INFO] logs - Entering text New Columns
[2017-11-09 16:59:03.996] [INFO] logs - Entering text New Columns
[2017-11-09 16:59:03.988] [INFO] logs - Entering text New Columns
[2017-11-09 16:59:03.996] [INFO] logs - Entering text New Columns
[2017-11-09 16:59:04.000] [INFO] logs - Clicking on button
[2017-11-09 16:59:04.000] [INFO] logs - Clicking on button
[2017-11-09 16:59:07.002] [INFO] logs - Navigating to URL
[2017-11-09 16:59:07.002] [INFO] logs - Navigating to URL
[2017-11-09 16:59:09.378] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:59:09.378] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 16:59:09.385] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:59:09.385] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:59:09.396] [INFO] logs - Entering text Newuser1
[2017-11-09 16:59:09.398] [INFO] logs - Clicking on button
[2017-11-09 16:59:09.401] [INFO] logs - A
[2017-11-09 16:59:09.385] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 16:59:09.402] [INFO] logs - B
[2017-11-09 16:59:09.385] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 16:59:09.404] [INFO] logs - C
[2017-11-09 16:59:09.396] [INFO] logs - Entering text Newuser1
[2017-11-09 16:59:09.410] [INFO] logs - D
[2017-11-09 16:59:09.398] [INFO] logs - Clicking on button
[2017-11-09 16:59:09.414] [INFO] logs - E
[2017-11-09 16:59:09.401] [INFO] logs - A
[2017-11-09 16:59:09.402] [INFO] logs - B
[2017-11-09 16:59:09.404] [INFO] logs - C
[2017-11-09 16:59:09.410] [INFO] logs - D
[2017-11-09 16:59:09.414] [INFO] logs - E
[2017-11-09 17:01:30.454] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:01:30.454] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:01:30.479] [INFO] logs - Navigating to URL
[2017-11-09 17:01:30.479] [INFO] logs - Navigating to URL
[2017-11-09 17:01:35.748] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:01:35.748] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:01:35.753] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:01:35.754] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:01:35.759] [INFO] logs - Entering text Newuser1
[2017-11-09 17:01:35.763] [INFO] logs - Clicking on button
[2017-11-09 17:01:35.766] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:01:35.768] [INFO] logs - Entering text New Columns
[2017-11-09 17:01:35.770] [INFO] logs - Entering text New Columns
[2017-11-09 17:01:35.775] [INFO] logs - Clicking on button
[2017-11-09 17:01:35.753] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:01:35.754] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:01:35.759] [INFO] logs - Entering text Newuser1
[2017-11-09 17:01:35.763] [INFO] logs - Clicking on button
[2017-11-09 17:01:35.766] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:01:35.768] [INFO] logs - Entering text New Columns
[2017-11-09 17:01:35.770] [INFO] logs - Entering text New Columns
[2017-11-09 17:01:35.775] [INFO] logs - Clicking on button
[2017-11-09 17:01:38.423] [INFO] logs - Navigating to URL
[2017-11-09 17:01:38.423] [INFO] logs - Navigating to URL
[2017-11-09 17:01:40.661] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:01:40.661] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:01:40.675] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:01:40.676] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:01:40.680] [INFO] logs - Entering text Newuser1
[2017-11-09 17:01:40.681] [INFO] logs - Clicking on button
[2017-11-09 17:01:40.690] [INFO] logs - A
[2017-11-09 17:01:40.692] [INFO] logs - B
[2017-11-09 17:01:40.693] [INFO] logs - C
[2017-11-09 17:01:40.703] [INFO] logs - D
[2017-11-09 17:01:40.708] [INFO] logs - Test Exception message: columnName is not defined
[2017-11-09 17:01:40.675] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:01:40.676] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:01:40.680] [INFO] logs - Entering text Newuser1
[2017-11-09 17:01:40.681] [INFO] logs - Clicking on button
[2017-11-09 17:01:40.690] [INFO] logs - A
[2017-11-09 17:01:40.692] [INFO] logs - B
[2017-11-09 17:01:40.693] [INFO] logs - C
[2017-11-09 17:01:40.703] [INFO] logs - D
[2017-11-09 17:01:40.708] [INFO] logs - Test Exception message: columnName is not defined
[2017-11-09 17:02:43.620] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:02:43.620] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:02:43.645] [INFO] logs - Navigating to URL
[2017-11-09 17:02:43.645] [INFO] logs - Navigating to URL
[2017-11-09 17:02:48.633] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:02:48.633] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:02:48.638] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:02:48.638] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:02:48.639] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:02:48.639] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:02:48.644] [INFO] logs - Entering text Newuser1
[2017-11-09 17:02:48.644] [INFO] logs - Entering text Newuser1
[2017-11-09 17:02:48.648] [INFO] logs - Clicking on button
[2017-11-09 17:02:48.648] [INFO] logs - Clicking on button
[2017-11-09 17:02:48.651] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:02:48.651] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:02:48.653] [INFO] logs - Entering text New Columns
[2017-11-09 17:02:48.653] [INFO] logs - Entering text New Columns
[2017-11-09 17:02:48.654] [INFO] logs - Entering text New Columns
[2017-11-09 17:02:48.654] [INFO] logs - Entering text New Columns
[2017-11-09 17:02:48.655] [INFO] logs - Clicking on button
[2017-11-09 17:02:48.655] [INFO] logs - Clicking on button
[2017-11-09 17:02:51.306] [INFO] logs - Navigating to URL
[2017-11-09 17:02:51.306] [INFO] logs - Navigating to URL
[2017-11-09 17:02:53.517] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:02:53.517] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:02:53.535] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:02:53.539] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:02:53.551] [INFO] logs - Entering text Newuser1
[2017-11-09 17:02:53.552] [INFO] logs - Clicking on button
[2017-11-09 17:02:53.554] [INFO] logs - A
[2017-11-09 17:02:53.556] [INFO] logs - B
[2017-11-09 17:02:53.558] [INFO] logs - C
[2017-11-09 17:02:53.566] [INFO] logs - D
[2017-11-09 17:02:53.582] [INFO] logs - Test Exception message: Cannot read property 'getText' of undefined
[2017-11-09 17:02:53.535] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:02:53.539] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:02:53.551] [INFO] logs - Entering text Newuser1
[2017-11-09 17:02:53.552] [INFO] logs - Clicking on button
[2017-11-09 17:02:53.554] [INFO] logs - A
[2017-11-09 17:02:53.556] [INFO] logs - B
[2017-11-09 17:02:53.558] [INFO] logs - C
[2017-11-09 17:02:53.566] [INFO] logs - D
[2017-11-09 17:02:53.582] [INFO] logs - Test Exception message: Cannot read property 'getText' of undefined
[2017-11-09 17:13:17.719] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:13:17.719] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:13:17.741] [INFO] logs - Navigating to URL
[2017-11-09 17:13:17.741] [INFO] logs - Navigating to URL
[2017-11-09 17:13:22.765] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:22.765] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:22.768] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:13:22.769] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:22.772] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:22.773] [INFO] logs - Clicking on button
[2017-11-09 17:13:22.774] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:13:22.768] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:13:22.776] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:22.777] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:22.779] [INFO] logs - Clicking on button
[2017-11-09 17:13:22.769] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:22.772] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:22.773] [INFO] logs - Clicking on button
[2017-11-09 17:13:22.774] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:13:22.776] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:22.777] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:22.779] [INFO] logs - Clicking on button
[2017-11-09 17:13:25.750] [INFO] logs - Navigating to URL
[2017-11-09 17:13:25.750] [INFO] logs - Navigating to URL
[2017-11-09 17:13:28.014] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:28.014] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:28.029] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:13:28.039] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:28.040] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:28.043] [INFO] logs - Clicking on button
[2017-11-09 17:13:28.045] [INFO] logs - A
[2017-11-09 17:13:28.046] [INFO] logs - B
[2017-11-09 17:13:28.047] [INFO] logs - C
[2017-11-09 17:13:28.051] [INFO] logs - D
[2017-11-09 17:13:28.053] [INFO] logs - E
[2017-11-09 17:13:28.029] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:13:28.039] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:28.040] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:28.043] [INFO] logs - Clicking on button
[2017-11-09 17:13:28.045] [INFO] logs - A
[2017-11-09 17:13:28.046] [INFO] logs - B
[2017-11-09 17:13:28.047] [INFO] logs - C
[2017-11-09 17:13:28.051] [INFO] logs - D
[2017-11-09 17:13:28.053] [INFO] logs - E
[2017-11-09 17:13:45.018] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:13:45.018] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:13:45.047] [INFO] logs - Navigating to URL
[2017-11-09 17:13:45.047] [INFO] logs - Navigating to URL
[2017-11-09 17:13:49.966] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:49.966] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:49.972] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:13:49.973] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:49.981] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:49.982] [INFO] logs - Clicking on button
[2017-11-09 17:13:49.986] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:13:49.987] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:49.989] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:49.993] [INFO] logs - Clicking on button
[2017-11-09 17:13:49.972] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:13:49.973] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:49.981] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:49.982] [INFO] logs - Clicking on button
[2017-11-09 17:13:49.986] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:13:49.987] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:49.989] [INFO] logs - Entering text New Columns
[2017-11-09 17:13:49.993] [INFO] logs - Clicking on button
[2017-11-09 17:13:52.697] [INFO] logs - Navigating to URL
[2017-11-09 17:13:52.697] [INFO] logs - Navigating to URL
[2017-11-09 17:13:54.842] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:54.842] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:13:54.847] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:13:54.848] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:54.851] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:54.852] [INFO] logs - Clicking on button
[2017-11-09 17:13:54.856] [INFO] logs - A
[2017-11-09 17:13:54.863] [INFO] logs - B
[2017-11-09 17:13:54.864] [INFO] logs - C
[2017-11-09 17:13:54.868] [INFO] logs - D
[2017-11-09 17:13:54.869] [INFO] logs - E
[2017-11-09 17:13:54.847] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:13:54.848] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:13:54.851] [INFO] logs - Entering text Newuser1
[2017-11-09 17:13:54.852] [INFO] logs - Clicking on button
[2017-11-09 17:13:54.856] [INFO] logs - A
[2017-11-09 17:13:54.863] [INFO] logs - B
[2017-11-09 17:13:54.864] [INFO] logs - C
[2017-11-09 17:13:54.868] [INFO] logs - D
[2017-11-09 17:13:54.869] [INFO] logs - E
[2017-11-09 17:15:18.075] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:15:18.075] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:15:18.101] [INFO] logs - Navigating to URL
[2017-11-09 17:15:18.101] [INFO] logs - Navigating to URL
[2017-11-09 17:15:23.322] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:15:23.322] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:15:23.329] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:15:23.330] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:15:23.334] [INFO] logs - Entering text Newuser1
[2017-11-09 17:15:23.339] [INFO] logs - Clicking on button
[2017-11-09 17:15:23.342] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:15:23.344] [INFO] logs - Entering text New Columns
[2017-11-09 17:15:23.346] [INFO] logs - Entering text New Columns
[2017-11-09 17:15:23.350] [INFO] logs - Clicking on button
[2017-11-09 17:15:23.329] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:15:23.330] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:15:23.334] [INFO] logs - Entering text Newuser1
[2017-11-09 17:15:23.339] [INFO] logs - Clicking on button
[2017-11-09 17:15:23.342] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:15:23.344] [INFO] logs - Entering text New Columns
[2017-11-09 17:15:23.346] [INFO] logs - Entering text New Columns
[2017-11-09 17:15:23.350] [INFO] logs - Clicking on button
[2017-11-09 17:15:26.581] [INFO] logs - Navigating to URL
[2017-11-09 17:15:26.581] [INFO] logs - Navigating to URL
[2017-11-09 17:15:28.919] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:15:28.919] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:15:28.924] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:15:28.927] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:15:28.929] [INFO] logs - Entering text Newuser1
[2017-11-09 17:15:28.931] [INFO] logs - Clicking on button
[2017-11-09 17:15:28.934] [INFO] logs - A
[2017-11-09 17:15:28.937] [INFO] logs - B
[2017-11-09 17:15:28.938] [INFO] logs - C
[2017-11-09 17:15:28.941] [INFO] logs - D
[2017-11-09 17:15:28.945] [INFO] logs - E
[2017-11-09 17:15:28.924] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:15:28.927] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:15:28.929] [INFO] logs - Entering text Newuser1
[2017-11-09 17:15:28.931] [INFO] logs - Clicking on button
[2017-11-09 17:15:28.934] [INFO] logs - A
[2017-11-09 17:15:28.937] [INFO] logs - B
[2017-11-09 17:15:28.938] [INFO] logs - C
[2017-11-09 17:15:28.941] [INFO] logs - D
[2017-11-09 17:15:28.945] [INFO] logs - E
[2017-11-09 17:16:15.683] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:16:15.683] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:16:15.728] [INFO] logs - Navigating to URL
[2017-11-09 17:16:15.728] [INFO] logs - Navigating to URL
[2017-11-09 17:16:20.747] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:16:20.747] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:16:20.752] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:16:20.753] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:16:20.758] [INFO] logs - Entering text Newuser1
[2017-11-09 17:16:20.762] [INFO] logs - Clicking on button
[2017-11-09 17:16:20.766] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:16:20.768] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:20.770] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:20.752] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:16:20.773] [INFO] logs - Clicking on button
[2017-11-09 17:16:20.753] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:16:20.758] [INFO] logs - Entering text Newuser1
[2017-11-09 17:16:20.762] [INFO] logs - Clicking on button
[2017-11-09 17:16:20.766] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:16:20.768] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:20.770] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:20.773] [INFO] logs - Clicking on button
[2017-11-09 17:16:23.535] [INFO] logs - Navigating to URL
[2017-11-09 17:16:23.535] [INFO] logs - Navigating to URL
[2017-11-09 17:16:25.803] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:16:25.803] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:16:25.809] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:16:25.812] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:16:25.813] [INFO] logs - Entering text Newuser1
[2017-11-09 17:16:25.816] [INFO] logs - Clicking on button
[2017-11-09 17:16:25.822] [INFO] logs - A
[2017-11-09 17:16:25.824] [INFO] logs - B
[2017-11-09 17:16:25.827] [INFO] logs - C
[2017-11-09 17:16:25.835] [INFO] logs - D
[2017-11-09 17:16:25.838] [INFO] logs - Test Exception message: Cannot read property 'getText' of undefined
[2017-11-09 17:16:25.809] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:16:25.812] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:16:25.813] [INFO] logs - Entering text Newuser1
[2017-11-09 17:16:25.816] [INFO] logs - Clicking on button
[2017-11-09 17:16:25.822] [INFO] logs - A
[2017-11-09 17:16:25.824] [INFO] logs - B
[2017-11-09 17:16:25.827] [INFO] logs - C
[2017-11-09 17:16:25.835] [INFO] logs - D
[2017-11-09 17:16:25.838] [INFO] logs - Test Exception message: Cannot read property 'getText' of undefined
[2017-11-09 17:16:51.181] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:16:51.181] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 17:16:51.208] [INFO] logs - Navigating to URL
[2017-11-09 17:16:51.208] [INFO] logs - Navigating to URL
[2017-11-09 17:16:56.158] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:16:56.158] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:16:56.164] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:16:56.165] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:16:56.169] [INFO] logs - Entering text Newuser1
[2017-11-09 17:16:56.170] [INFO] logs - Clicking on button
[2017-11-09 17:16:56.173] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:16:56.177] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:56.178] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:56.181] [INFO] logs - Clicking on button
[2017-11-09 17:16:56.164] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 17:16:56.165] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:16:56.169] [INFO] logs - Entering text Newuser1
[2017-11-09 17:16:56.170] [INFO] logs - Clicking on button
[2017-11-09 17:16:56.173] [INFO] logs - Waiting for .//*[.="Bookmarked"]
[2017-11-09 17:16:56.177] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:56.178] [INFO] logs - Entering text New Columns
[2017-11-09 17:16:56.181] [INFO] logs - Clicking on button
[2017-11-09 17:16:58.915] [INFO] logs - Navigating to URL
[2017-11-09 17:16:58.915] [INFO] logs - Navigating to URL
[2017-11-09 17:17:01.105] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:17:01.105] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 17:17:01.113] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:17:01.114] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:17:01.116] [INFO] logs - Entering text Newuser1
[2017-11-09 17:17:01.124] [INFO] logs - Clicking on button
[2017-11-09 17:17:01.126] [INFO] logs - A
[2017-11-09 17:17:01.130] [INFO] logs - B
[2017-11-09 17:17:01.131] [INFO] logs - C
[2017-11-09 17:17:01.142] [INFO] logs - D
[2017-11-09 17:17:01.150] [INFO] logs - Test Exception message: Cannot read property 'getText' of undefined
[2017-11-09 17:17:01.113] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 17:17:01.114] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 17:17:01.116] [INFO] logs - Entering text Newuser1
[2017-11-09 17:17:01.124] [INFO] logs - Clicking on button
[2017-11-09 17:17:01.126] [INFO] logs - A
[2017-11-09 17:17:01.130] [INFO] logs - B
[2017-11-09 17:17:01.131] [INFO] logs - C
[2017-11-09 17:17:01.142] [INFO] logs - D
[2017-11-09 17:17:01.150] [INFO] logs - Test Exception message: Cannot read property 'getText' of undefined
[2017-11-09 18:16:36.724] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:16:36.724] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:16:36.749] [INFO] logs - Navigating to URL
[2017-11-09 18:16:36.749] [INFO] logs - Navigating to URL
[2017-11-09 18:16:42.415] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:16:42.415] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:16:42.420] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:16:42.423] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:16:42.426] [INFO] logs - Entering text Newuser1
[2017-11-09 18:16:42.430] [INFO] logs - Clicking on button
[2017-11-09 18:16:42.420] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:16:42.423] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:16:42.426] [INFO] logs - Entering text Newuser1
[2017-11-09 18:16:42.430] [INFO] logs - Clicking on button
[2017-11-09 18:17:09.291] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:17:09.291] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:17:09.316] [INFO] logs - Navigating to URL
[2017-11-09 18:17:09.316] [INFO] logs - Navigating to URL
[2017-11-09 18:17:14.345] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:17:14.345] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:17:14.349] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:17:14.350] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:17:14.354] [INFO] logs - Entering text Newuser1
[2017-11-09 18:17:14.356] [INFO] logs - Clicking on button
[2017-11-09 18:17:14.349] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:17:14.350] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:17:14.354] [INFO] logs - Entering text Newuser1
[2017-11-09 18:17:14.356] [INFO] logs - Clicking on button
[2017-11-09 18:18:33.645] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:18:33.645] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:18:33.670] [INFO] logs - Navigating to URL
[2017-11-09 18:18:33.670] [INFO] logs - Navigating to URL
[2017-11-09 18:18:38.705] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:18:38.705] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:18:38.710] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:18:38.710] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:18:38.711] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:18:38.711] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:18:38.719] [INFO] logs - Entering text Newuser1
[2017-11-09 18:18:38.719] [INFO] logs - Entering text Newuser1
[2017-11-09 18:18:38.720] [INFO] logs - Clicking on button
[2017-11-09 18:18:38.720] [INFO] logs - Clicking on button
[2017-11-09 18:39:01.765] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:39:01.765] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:39:01.791] [INFO] logs - Navigating to URL
[2017-11-09 18:39:01.791] [INFO] logs - Navigating to URL
[2017-11-09 18:39:06.874] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:39:06.874] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:39:06.880] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:39:06.881] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:39:06.885] [INFO] logs - Entering text Newuser1
[2017-11-09 18:39:06.889] [INFO] logs - Clicking on button
[2017-11-09 18:39:06.880] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:39:06.881] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:39:06.885] [INFO] logs - Entering text Newuser1
[2017-11-09 18:39:06.889] [INFO] logs - Clicking on button
[2017-11-09 18:43:06.733] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:43:06.733] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:43:06.763] [INFO] logs - Navigating to URL
[2017-11-09 18:43:06.763] [INFO] logs - Navigating to URL
[2017-11-09 18:43:11.692] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:43:11.692] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:43:11.697] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:43:11.698] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:43:11.705] [INFO] logs - Entering text Newuser1
[2017-11-09 18:43:11.706] [INFO] logs - Clicking on button
[2017-11-09 18:43:11.697] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:43:11.698] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:43:11.705] [INFO] logs - Entering text Newuser1
[2017-11-09 18:43:11.706] [INFO] logs - Clicking on button
[2017-11-09 18:43:13.125] [INFO] logs - A
[2017-11-09 18:43:13.125] [INFO] logs - A
[2017-11-09 18:43:36.565] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:43:36.565] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:43:36.590] [INFO] logs - Navigating to URL
[2017-11-09 18:43:36.590] [INFO] logs - Navigating to URL
[2017-11-09 18:43:41.255] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:43:41.255] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:43:41.257] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:43:41.257] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:43:41.258] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:43:41.258] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:43:41.261] [INFO] logs - Entering text Newuser1
[2017-11-09 18:43:41.261] [INFO] logs - Entering text Newuser1
[2017-11-09 18:43:41.263] [INFO] logs - Clicking on button
[2017-11-09 18:43:41.263] [INFO] logs - Clicking on button
[2017-11-09 18:43:42.653] [INFO] logs - A
[2017-11-09 18:43:42.653] [INFO] logs - A
[2017-11-09 18:43:42.656] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:43:42.681] [INFO] logs - B
[2017-11-09 18:43:42.656] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:43:42.685] [INFO] logs - [object Object]
[2017-11-09 18:43:42.681] [INFO] logs - B
[2017-11-09 18:43:42.685] [INFO] logs - [object Object]
[2017-11-09 18:43:42.688] [INFO] logs - C
[2017-11-09 18:43:42.688] [INFO] logs - C
[2017-11-09 18:44:15.132] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:44:15.132] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:44:15.162] [INFO] logs - Navigating to URL
[2017-11-09 18:44:15.162] [INFO] logs - Navigating to URL
[2017-11-09 18:44:20.071] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:44:20.071] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:44:20.076] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:44:20.077] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:44:20.082] [INFO] logs - Entering text Newuser1
[2017-11-09 18:44:20.086] [INFO] logs - Clicking on button
[2017-11-09 18:44:20.076] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:44:20.077] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:44:20.082] [INFO] logs - Entering text Newuser1
[2017-11-09 18:44:20.086] [INFO] logs - Clicking on button
[2017-11-09 18:44:21.485] [INFO] logs - A
[2017-11-09 18:44:21.485] [INFO] logs - A
[2017-11-09 18:44:49.106] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:44:49.106] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:44:49.131] [INFO] logs - Navigating to URL
[2017-11-09 18:44:49.131] [INFO] logs - Navigating to URL
[2017-11-09 18:44:54.638] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:44:54.638] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:44:54.643] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:44:54.644] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:44:54.649] [INFO] logs - Entering text Newuser1
[2017-11-09 18:44:54.643] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:44:54.653] [INFO] logs - Clicking on button
[2017-11-09 18:44:54.644] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:44:54.649] [INFO] logs - Entering text Newuser1
[2017-11-09 18:44:54.653] [INFO] logs - Clicking on button
[2017-11-09 18:44:56.078] [INFO] logs - A
[2017-11-09 18:44:56.078] [INFO] logs - A
[2017-11-09 18:47:11.891] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:47:11.891] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:47:11.914] [INFO] logs - Navigating to URL
[2017-11-09 18:47:11.914] [INFO] logs - Navigating to URL
[2017-11-09 18:47:17.385] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:47:17.385] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:47:17.388] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:47:17.388] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:47:17.389] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:47:17.389] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:47:17.391] [INFO] logs - Entering text Newuser1
[2017-11-09 18:47:17.391] [INFO] logs - Entering text Newuser1
[2017-11-09 18:47:17.392] [INFO] logs - Clicking on button
[2017-11-09 18:47:17.392] [INFO] logs - Clicking on button
[2017-11-09 18:47:18.800] [INFO] logs - A
[2017-11-09 18:47:18.800] [INFO] logs - A
[2017-11-09 18:47:57.249] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:47:57.249] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:47:57.275] [INFO] logs - Navigating to URL
[2017-11-09 18:47:57.275] [INFO] logs - Navigating to URL
[2017-11-09 18:48:02.823] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:48:02.823] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:48:02.832] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:48:02.833] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:48:02.838] [INFO] logs - Entering text Newuser1
[2017-11-09 18:48:02.842] [INFO] logs - Clicking on button
[2017-11-09 18:48:02.832] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:48:02.833] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:48:02.838] [INFO] logs - Entering text Newuser1
[2017-11-09 18:48:02.842] [INFO] logs - Clicking on button
[2017-11-09 18:48:04.527] [INFO] logs - A
[2017-11-09 18:48:04.527] [INFO] logs - A
[2017-11-09 18:48:04.529] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:48:04.529] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:48:04.566] [INFO] logs - B
[2017-11-09 18:48:04.566] [INFO] logs - B
[2017-11-09 18:48:04.566] [INFO] logs - C
[2017-11-09 18:48:04.566] [INFO] logs - C
[2017-11-09 18:52:19.860] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:52:19.860] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:52:19.884] [INFO] logs - Navigating to URL
[2017-11-09 18:52:19.884] [INFO] logs - Navigating to URL
[2017-11-09 18:52:25.255] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:52:25.255] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:52:25.258] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:52:25.258] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:52:25.258] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:52:25.258] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:52:25.261] [INFO] logs - Entering text Newuser1
[2017-11-09 18:52:25.261] [INFO] logs - Entering text Newuser1
[2017-11-09 18:52:25.262] [INFO] logs - Clicking on button
[2017-11-09 18:52:25.262] [INFO] logs - Clicking on button
[2017-11-09 18:52:26.656] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5']
[2017-11-09 18:52:26.656] [INFO] logs - [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5']
[2017-11-09 18:52:26.661] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:52:26.700] [INFO] logs - B
[2017-11-09 18:52:26.661] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:52:26.705] [INFO] logs - C
[2017-11-09 18:52:26.700] [INFO] logs - B
[2017-11-09 18:52:26.705] [INFO] logs - C
[2017-11-09 18:55:24.452] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:55:24.452] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:55:24.478] [INFO] logs - Navigating to URL
[2017-11-09 18:55:24.478] [INFO] logs - Navigating to URL
[2017-11-09 18:55:29.770] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:55:29.770] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:55:29.775] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:55:29.776] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:55:29.780] [INFO] logs - Entering text Newuser1
[2017-11-09 18:55:29.782] [INFO] logs - Clicking on button
[2017-11-09 18:55:29.775] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:55:29.776] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:55:29.780] [INFO] logs - Entering text Newuser1
[2017-11-09 18:55:29.782] [INFO] logs - Clicking on button
[2017-11-09 18:56:20.249] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:56:20.249] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:56:20.276] [INFO] logs - Navigating to URL
[2017-11-09 18:56:20.276] [INFO] logs - Navigating to URL
[2017-11-09 18:56:25.957] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:56:25.957] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:56:25.964] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:56:25.965] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:56:25.981] [INFO] logs - Entering text Newuser1
[2017-11-09 18:56:25.983] [INFO] logs - Clicking on button
[2017-11-09 18:56:25.964] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:56:25.965] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:56:25.981] [INFO] logs - Entering text Newuser1
[2017-11-09 18:56:25.983] [INFO] logs - Clicking on button
[2017-11-09 18:56:27.420] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:56:27.420] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:56:27.459] [INFO] logs - A
[2017-11-09 18:56:27.463] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:56:27.459] [INFO] logs - A
[2017-11-09 18:56:27.488] [INFO] logs - B
[2017-11-09 18:56:27.463] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: [String: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5'] },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:56:27.488] [INFO] logs - B
[2017-11-09 18:56:27.494] [INFO] logs - C
[2017-11-09 18:56:27.494] [INFO] logs - C
[2017-11-09 18:57:03.199] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:57:03.199] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:57:03.226] [INFO] logs - Navigating to URL
[2017-11-09 18:57:03.226] [INFO] logs - Navigating to URL
[2017-11-09 18:57:08.055] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:57:08.055] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:57:08.059] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:57:08.060] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:57:08.065] [INFO] logs - Entering text Newuser1
[2017-11-09 18:57:08.070] [INFO] logs - Clicking on button
[2017-11-09 18:57:08.059] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:57:08.060] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:57:08.065] [INFO] logs - Entering text Newuser1
[2017-11-09 18:57:08.070] [INFO] logs - Clicking on button
[2017-11-09 18:57:28.059] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:57:28.059] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 18:57:28.086] [INFO] logs - Navigating to URL
[2017-11-09 18:57:28.086] [INFO] logs - Navigating to URL
[2017-11-09 18:57:32.676] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:57:32.676] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 18:57:32.682] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:57:32.683] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:57:32.691] [INFO] logs - Entering text Newuser1
[2017-11-09 18:57:32.692] [INFO] logs - Clicking on button
[2017-11-09 18:57:32.682] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 18:57:32.683] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 18:57:32.691] [INFO] logs - Entering text Newuser1
[2017-11-09 18:57:32.692] [INFO] logs - Clicking on button
[2017-11-09 18:57:34.083] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:57:34.083] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:57:34.106] [INFO] logs - A
[2017-11-09 18:57:34.110] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:57:34.134] [INFO] logs - B
[2017-11-09 18:57:34.135] [INFO] logs - C
[2017-11-09 18:57:34.106] [INFO] logs - A
[2017-11-09 18:57:34.110] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: [Function],
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: [Object],
        callbacks_: null,
        state_: 'pending',
        handled_: false,
        value_: undefined,
        queue_: null },
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 18:57:34.134] [INFO] logs - B
[2017-11-09 18:57:34.135] [INFO] logs - C
[2017-11-09 19:00:04.330] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:00:04.330] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:00:04.356] [INFO] logs - Navigating to URL
[2017-11-09 19:00:04.356] [INFO] logs - Navigating to URL
[2017-11-09 19:00:09.652] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:00:09.652] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:00:09.657] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:00:09.658] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:00:09.666] [INFO] logs - Entering text Newuser1
[2017-11-09 19:00:09.667] [INFO] logs - Clicking on button
[2017-11-09 19:00:09.657] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:00:09.658] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:00:09.666] [INFO] logs - Entering text Newuser1
[2017-11-09 19:00:09.667] [INFO] logs - Clicking on button
[2017-11-09 19:00:11.064] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:00:11.064] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:00:11.104] [INFO] logs - A
[2017-11-09 19:00:11.106] [INFO] logs - undefined
[2017-11-09 19:00:11.108] [INFO] logs - B
[2017-11-09 19:00:11.109] [INFO] logs - C
[2017-11-09 19:00:11.104] [INFO] logs - A
[2017-11-09 19:00:11.106] [INFO] logs - undefined
[2017-11-09 19:00:11.108] [INFO] logs - B
[2017-11-09 19:00:11.109] [INFO] logs - C
[2017-11-09 19:00:38.507] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:00:38.507] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:00:38.533] [INFO] logs - Navigating to URL
[2017-11-09 19:00:38.533] [INFO] logs - Navigating to URL
[2017-11-09 19:00:43.905] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:00:43.905] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:00:43.911] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:00:43.912] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:00:43.917] [INFO] logs - Entering text Newuser1
[2017-11-09 19:00:43.919] [INFO] logs - Clicking on button
[2017-11-09 19:00:43.911] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:00:43.912] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:00:43.917] [INFO] logs - Entering text Newuser1
[2017-11-09 19:00:43.919] [INFO] logs - Clicking on button
[2017-11-09 19:00:45.307] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:00:45.307] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:00:45.348] [INFO] logs - A
[2017-11-09 19:00:45.351] [INFO] logs - undefined
[2017-11-09 19:00:45.353] [INFO] logs - B
[2017-11-09 19:00:45.354] [INFO] logs - C
[2017-11-09 19:00:45.348] [INFO] logs - A
[2017-11-09 19:00:45.351] [INFO] logs - undefined
[2017-11-09 19:00:45.353] [INFO] logs - B
[2017-11-09 19:00:45.354] [INFO] logs - C
[2017-11-09 19:01:12.568] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:01:12.568] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:01:12.599] [INFO] logs - Navigating to URL
[2017-11-09 19:01:12.599] [INFO] logs - Navigating to URL
[2017-11-09 19:01:17.869] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:01:17.869] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:01:17.875] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:01:17.876] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:01:17.884] [INFO] logs - Entering text Newuser1
[2017-11-09 19:01:17.885] [INFO] logs - Clicking on button
[2017-11-09 19:01:17.875] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:01:17.876] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:01:17.884] [INFO] logs - Entering text Newuser1
[2017-11-09 19:01:17.885] [INFO] logs - Clicking on button
[2017-11-09 19:01:19.266] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:01:19.266] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:01:19.299] [INFO] logs - A
[2017-11-09 19:01:19.305] [INFO] logs - undefined
[2017-11-09 19:01:19.306] [INFO] logs - B
[2017-11-09 19:01:19.307] [INFO] logs - C
[2017-11-09 19:01:19.299] [INFO] logs - A
[2017-11-09 19:01:19.305] [INFO] logs - undefined
[2017-11-09 19:01:19.306] [INFO] logs - B
[2017-11-09 19:01:19.307] [INFO] logs - C
[2017-11-09 19:01:32.902] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:01:32.902] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:01:32.936] [INFO] logs - Navigating to URL
[2017-11-09 19:01:32.936] [INFO] logs - Navigating to URL
[2017-11-09 19:01:38.600] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:01:38.600] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:01:38.605] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:01:38.606] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:01:38.609] [INFO] logs - Entering text Newuser1
[2017-11-09 19:01:38.614] [INFO] logs - Clicking on button
[2017-11-09 19:01:38.605] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:01:38.606] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:01:38.609] [INFO] logs - Entering text Newuser1
[2017-11-09 19:01:38.614] [INFO] logs - Clicking on button
[2017-11-09 19:01:40.079] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:01:40.079] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:01:40.118] [INFO] logs - A
[2017-11-09 19:01:40.128] [INFO] logs - undefined
[2017-11-09 19:01:40.129] [INFO] logs - B
[2017-11-09 19:01:40.130] [INFO] logs - C
[2017-11-09 19:01:40.118] [INFO] logs - A
[2017-11-09 19:01:40.128] [INFO] logs - undefined
[2017-11-09 19:01:40.129] [INFO] logs - B
[2017-11-09 19:01:40.130] [INFO] logs - C
[2017-11-09 19:01:55.944] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:01:55.944] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:01:55.969] [INFO] logs - Navigating to URL
[2017-11-09 19:01:55.969] [INFO] logs - Navigating to URL
[2017-11-09 19:02:01.926] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:02:01.926] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:02:01.931] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:02:01.933] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:02:01.938] [INFO] logs - Entering text Newuser1
[2017-11-09 19:02:01.942] [INFO] logs - Clicking on button
[2017-11-09 19:02:01.931] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:02:01.933] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:02:01.938] [INFO] logs - Entering text Newuser1
[2017-11-09 19:02:01.942] [INFO] logs - Clicking on button
[2017-11-09 19:02:03.457] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:02:03.457] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:02:03.501] [INFO] logs - A
[2017-11-09 19:02:03.503] [INFO] logs - undefined
[2017-11-09 19:02:03.505] [INFO] logs - B
[2017-11-09 19:02:03.505] [INFO] logs - C
[2017-11-09 19:02:03.501] [INFO] logs - A
[2017-11-09 19:02:03.503] [INFO] logs - undefined
[2017-11-09 19:02:03.505] [INFO] logs - B
[2017-11-09 19:02:03.505] [INFO] logs - C
[2017-11-09 19:02:51.289] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:02:51.289] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:02:51.315] [INFO] logs - Navigating to URL
[2017-11-09 19:02:51.315] [INFO] logs - Navigating to URL
[2017-11-09 19:02:57.196] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:02:57.196] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:02:57.201] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:02:57.202] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:02:57.206] [INFO] logs - Entering text Newuser1
[2017-11-09 19:02:57.208] [INFO] logs - Clicking on button
[2017-11-09 19:02:57.201] [INFO] logs - Executing Test: To verify removing a new column
[2017-11-09 19:02:57.202] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:02:57.206] [INFO] logs - Entering text Newuser1
[2017-11-09 19:02:57.208] [INFO] logs - Clicking on button
[2017-11-09 19:02:58.556] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:02:58.556] [INFO] logs - ElementFinder {
  browser_: 
   ProtractorBrowser {
     controlFlow: [Function],
     schedule: [Function],
     setFileDetector: [Function],
     getExecutor: [Function],
     getSession: [Function],
     getCapabilities: [Function],
     quit: [Function],
     actions: [Function],
     touchActions: [Function],
     executeScript: [Function],
     executeAsyncScript: [Function],
     call: [Function],
     wait: [Function],
     sleep: [Function],
     getWindowHandle: [Function],
     getAllWindowHandles: [Function],
     getPageSource: [Function],
     close: [Function],
     getCurrentUrl: [Function],
     getTitle: [Function],
     findElementInternal_: [Function],
     findElementsInternal_: [Function],
     takeScreenshot: [Function],
     manage: [Function],
     switchTo: [Function],
     driver: 
      thenableWebDriverProxy {
        flow_: [Object],
        session_: [Object],
        executor_: [Object],
        fileDetector_: null,
        onQuit_: undefined,
        cancel: [Function],
        then: [Function: bound then],
        catch: [Function: bound then],
        getNetworkConnection: [Function],
        setNetworkConnection: [Function],
        toggleAirplaneMode: [Function],
        toggleWiFi: [Function],
        toggleData: [Function],
        toggleLocationServices: [Function],
        getGeolocation: [Function],
        setGeolocation: [Function],
        getCurrentDeviceActivity: [Function],
        startDeviceActivity: [Function],
        getAppiumSettings: [Function],
        setAppiumSettings: [Function],
        getCurrentContext: [Function],
        selectContext: [Function],
        getScreenOrientation: [Function],
        setScreenOrientation: [Function],
        isDeviceLocked: [Function],
        lockDevice: [Function],
        unlockDevice: [Function],
        installApp: [Function],
        isAppInstalled: [Function],
        removeApp: [Function],
        pullFileFromDevice: [Function],
        pullFolderFromDevice: [Function],
        pushFileToDevice: [Function],
        listContexts: [Function],
        uploadFile: [Function],
        switchToParentFrame: [Function],
        fullscreen: [Function],
        sendAppToBackground: [Function],
        closeApp: [Function],
        getAppStrings: [Function],
        launchSession: [Function],
        resetApp: [Function],
        hideSoftKeyboard: [Function],
        getDeviceTime: [Function],
        openDeviceNotifications: [Function],
        rotationGesture: [Function],
        shakeDevice: [Function] },
     element: { [Function: element] all: [Function] },
     '$': [Function],
     '$$': [Function],
     baseUrl: '',
     getPageTimeout: 10000,
     params: {},
     resetUrl: 'data:text/html,<html></html>',
     debugHelper: DebugHelper { browserUnderDebug_: [Circular] },
     ready: 
      ManagedPromise {
        flow_: [Object],
        stack_: null,
        parent_: null,
        callbacks_: null,
        state_: 'fulfilled',
        handled_: true,
        value_: [Circular],
        queue_: null },
     trackOutstandingTimeouts_: true,
     mockModules_: [ [Object] ],
     ExpectedConditions: ProtractorExpectedConditions { browser: [Circular] },
     plugins_: 
      Plugins {
        setup: [Function],
        onPrepare: [Function],
        teardown: [Function],
        postResults: [Function],
        postTest: [Function],
        onPageLoad: [Function],
        onPageStable: [Function],
        waitForPromise: [Function],
        waitForCondition: [Function],
        pluginObjs: [],
        assertions: {},
        resultsReported: false },
     allScriptsTimeout: 11000,
     getProcessedConfig: [Function],
     forkNewDriverInstance: [Function],
     restart: [Function],
     restartSync: [Function],
     internalRootEl: '',
     internalIgnoreSynchronization: true },
  then: null,
  parentElementArrayFinder: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  elementArrayFinder_: 
   ElementArrayFinder {
     browser_: 
      ProtractorBrowser {
        controlFlow: [Function],
        schedule: [Function],
        setFileDetector: [Function],
        getExecutor: [Function],
        getSession: [Function],
        getCapabilities: [Function],
        quit: [Function],
        actions: [Function],
        touchActions: [Function],
        executeScript: [Function],
        executeAsyncScript: [Function],
        call: [Function],
        wait: [Function],
        sleep: [Function],
        getWindowHandle: [Function],
        getAllWindowHandles: [Function],
        getPageSource: [Function],
        close: [Function],
        getCurrentUrl: [Function],
        getTitle: [Function],
        findElementInternal_: [Function],
        findElementsInternal_: [Function],
        takeScreenshot: [Function],
        manage: [Function],
        switchTo: [Function],
        driver: [Object],
        element: [Object],
        '$': [Function],
        '$$': [Function],
        baseUrl: '',
        getPageTimeout: 10000,
        params: {},
        resetUrl: 'data:text/html,<html></html>',
        debugHelper: [Object],
        ready: [Object],
        trackOutstandingTimeouts_: true,
        mockModules_: [Object],
        ExpectedConditions: [Object],
        plugins_: [Object],
        allScriptsTimeout: 11000,
        getProcessedConfig: [Function],
        forkNewDriverInstance: [Function],
        restart: [Function],
        restartSync: [Function],
        internalRootEl: '',
        internalIgnoreSynchronization: true },
     getWebElements: [Function: getWebElements],
     locator_: 
      name(name) {
          return By.css('*[name="' + escapeCss(name) + '"]');
        } {
        using: 'xpath',
        value: '/html/body/app-root/div/app-dashboard/div/div/div[1]/div[2]/div/div[1]/h5' },
     actionResults_: null,
     click: [Function],
     sendKeys: [Function],
     getTagName: [Function],
     getCssValue: [Function],
     getAttribute: [Function],
     getText: [Function],
     getSize: [Function],
     getLocation: [Function],
     isEnabled: [Function],
     isSelected: [Function],
     submit: [Function],
     clear: [Function],
     isDisplayed: [Function],
     getId: [Function],
     takeScreenshot: [Function] },
  click: [Function],
  sendKeys: [Function],
  getTagName: [Function],
  getCssValue: [Function],
  getAttribute: [Function],
  getText: [Function],
  getSize: [Function],
  getLocation: [Function],
  isEnabled: [Function],
  isSelected: [Function],
  submit: [Function],
  clear: [Function],
  isDisplayed: [Function],
  getId: [Function],
  takeScreenshot: [Function] }
[2017-11-09 19:02:58.596] [INFO] logs - A
[2017-11-09 19:02:58.599] [INFO] logs - undefined
[2017-11-09 19:02:58.596] [INFO] logs - A
[2017-11-09 19:02:58.600] [INFO] logs - B
[2017-11-09 19:02:58.602] [INFO] logs - C
[2017-11-09 19:02:58.599] [INFO] logs - undefined
[2017-11-09 19:02:58.600] [INFO] logs - B
[2017-11-09 19:02:58.602] [INFO] logs - C
[2017-11-09 19:53:53.716] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:53:53.716] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:53:53.740] [INFO] logs - Navigating to URL
[2017-11-09 19:53:53.740] [INFO] logs - Navigating to URL
[2017-11-09 19:53:59.529] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:53:59.529] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:53:59.534] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:53:59.535] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:53:59.542] [INFO] logs - Entering text Newuser1
[2017-11-09 19:53:59.543] [INFO] logs - Clicking on button
[2017-11-09 19:53:59.534] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:53:59.535] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:53:59.542] [INFO] logs - Entering text Newuser1
[2017-11-09 19:53:59.543] [INFO] logs - Clicking on button
[2017-11-09 19:55:35.759] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:55:35.759] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:55:35.784] [INFO] logs - Navigating to URL
[2017-11-09 19:55:35.784] [INFO] logs - Navigating to URL
[2017-11-09 19:55:41.931] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:55:41.931] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:55:41.937] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:55:41.938] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:55:41.942] [INFO] logs - Entering text Newuser1
[2017-11-09 19:55:41.944] [INFO] logs - Clicking on button
[2017-11-09 19:55:41.937] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:55:41.938] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:55:41.942] [INFO] logs - Entering text Newuser1
[2017-11-09 19:55:41.944] [INFO] logs - Clicking on button
[2017-11-09 19:56:10.194] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:56:10.194] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:56:10.219] [INFO] logs - Navigating to URL
[2017-11-09 19:56:10.219] [INFO] logs - Navigating to URL
[2017-11-09 19:56:16.156] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:56:16.156] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:56:16.160] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:56:16.161] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:56:16.164] [INFO] logs - Entering text Newuser1
[2017-11-09 19:56:16.165] [INFO] logs - Clicking on button
[2017-11-09 19:56:16.160] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:56:16.161] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:56:16.164] [INFO] logs - Entering text Newuser1
[2017-11-09 19:56:16.165] [INFO] logs - Clicking on button
[2017-11-09 19:57:11.527] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:57:11.527] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:57:11.558] [INFO] logs - Navigating to URL
[2017-11-09 19:57:11.558] [INFO] logs - Navigating to URL
[2017-11-09 19:57:17.152] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:57:17.152] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:57:17.159] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:57:17.161] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:57:17.168] [INFO] logs - Entering text Newuser1
[2017-11-09 19:57:17.170] [INFO] logs - Clicking on button
[2017-11-09 19:57:17.159] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:57:17.161] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:57:17.168] [INFO] logs - Entering text Newuser1
[2017-11-09 19:57:17.170] [INFO] logs - Clicking on button
[2017-11-09 19:58:59.430] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:58:59.430] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:58:59.452] [INFO] logs - Navigating to URL
[2017-11-09 19:58:59.452] [INFO] logs - Navigating to URL
[2017-11-09 19:59:05.472] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:59:05.472] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:59:05.478] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:59:05.479] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:59:05.482] [INFO] logs - Entering text Newuser1
[2017-11-09 19:59:05.483] [INFO] logs - Clicking on button
[2017-11-09 19:59:05.478] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:59:05.479] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:59:05.482] [INFO] logs - Entering text Newuser1
[2017-11-09 19:59:05.483] [INFO] logs - Clicking on button
[2017-11-09 19:59:53.281] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:59:53.281] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 19:59:53.305] [INFO] logs - Navigating to URL
[2017-11-09 19:59:53.305] [INFO] logs - Navigating to URL
[2017-11-09 19:59:58.670] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:59:58.670] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 19:59:58.678] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:59:58.679] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:59:58.683] [INFO] logs - Entering text Newuser1
[2017-11-09 19:59:58.684] [INFO] logs - Clicking on button
[2017-11-09 19:59:58.678] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 19:59:58.679] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 19:59:58.683] [INFO] logs - Entering text Newuser1
[2017-11-09 19:59:58.684] [INFO] logs - Clicking on button
[2017-11-09 20:02:16.426] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 20:02:16.426] [INFO] logs - Executing suite: To test dashboard
[2017-11-09 20:02:16.448] [INFO] logs - Navigating to URL
[2017-11-09 20:02:16.448] [INFO] logs - Navigating to URL
[2017-11-09 20:02:22.023] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 20:02:22.023] [INFO] logs - Current url is http://172.16.0.46/PSPSUIBuild/login
[2017-11-09 20:02:22.031] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 20:02:22.032] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 20:02:22.035] [INFO] logs - Entering text Newuser1
[2017-11-09 20:02:22.037] [INFO] logs - Clicking on button
[2017-11-09 20:02:22.031] [INFO] logs - Executing Test: To verify creating a new column
[2017-11-09 20:02:22.032] [INFO] logs - Entering text SIMGROUP\Optimus
[2017-11-09 20:02:22.035] [INFO] logs - Entering text Newuser1
[2017-11-09 20:02:22.037] [INFO] logs - Clicking on button
